##{0:0:0:main.prg}C:\Commodore\C64LoadMaps\main.asm

 ;===============================================================================
; Commodore 64: "Hotel Map"
;
; File: Project 12-13: "Enemy Attacks"
;===============================================================================
 
; Bugs found: When scrolling the screen, sometimes the wall detection is not found
; and sprite passes through it.

; Sprite animation looping is off. The animation is running fast
; Sprite Idle animation is not showing.
;===============================================================================
; SCROLLING MAP EXAMPLE 1 - C64 YouTube Game Project
; 2016/17 - Peter 'Sig' Hewett aka RetroRomIcon (contributions)
; Additional coding by Steve Morrow
;===============================================================================
Operator Calc        ; IMPORTANT - calculations are made BEFORE hi/lo bytes
                     ;             in precidence (for expressions and tables)
;===============================================================================
; DEFINITIONS
;===============================================================================
IncAsm "VIC_Registers.asm"             ; VICII register includes
IncAsm "Game_Macros.asm                    ; macro includes
;===============================================================================
;===============================================================================
; CONSTANTS
;===============================================================================

CONSOLE_TEXT = SPRITE_CONSOLE_TEXT
CONSOLE_DISPLAY = DisplaySpriteInfo

#region "Constants"
SCREEN1_MEM  = $4000                 ; Bank 1 - Screen 0 ; $4000
SCREEN2_MEM  = $4400                 ; Bank 1 - Screen 1 ; $4400
SCORE_SCREEN = $5800                 ; Bank 1 - Screen 6 ; $5800

;MAP_MEM = $8000
;ATTRIBUTE_MEM = MAP_MEM + 2
;TILE_MEM = ATTRIBUTE_MEM + 2


; ****** CURRENT PROJECT *******
; Start $4800: 18432

; Top blue background: 18680
; Rock stacked wall: 19112
; Regular brick wall: 19256
; Pole facing to left: 19304
; Top part of wall (behind window): 19544
; Solid water part: 19744, 19888
; Rock stacked wall: 19864

CHRADR1 = 19992                      ; middle of rope
CHRADR2 = 19144                      ; top of window
CHRADR3 = 20128                      ; top water tile: 20288
CHRADR3 = 19544                     ; 20200, 20080: rock stacked wall

; 19544 = top part of orange (background wall)
; 20128 = top middle of rope facing right
; 20144 = top part of rope facing right
; 20192 = center of rope facing right
; 20224 = top/center of rope facing left (top part)

; 20320 = top of water
CHRADR4 = 20312

COLOR_MEM  = $D800                   ; Color mem never changes

SPRITE_POINTER_BASE = SCREEN1_MEM + $3f8 ; last 8 bytes of screen mem

SPRITE_BASE = $70                       ; the pointer to the first image#

SPRITE_0_PTR = SPRITE_POINTER_BASE + 0  ; Sprite pointers
SPRITE_1_PTR = SPRITE_POINTER_BASE + 1
SPRITE_2_PTR = SPRITE_POINTER_BASE + 2
SPRITE_3_PTR = SPRITE_POINTER_BASE + 3
SPRITE_4_PTR = SPRITE_POINTER_BASE + 4
SPRITE_5_PTR = SPRITE_POINTER_BASE + 5
SPRITE_6_PTR = SPRITE_POINTER_BASE + 6
SPRITE_7_PTR = SPRITE_POINTER_BASE + 7

; Set map walking limits
MAP_RIGHT_LIMIT = 17
MAP_DOWN_LIMIT = 10

; FarmLife
TILE_DEPTH1 = 16
TILE_DEPTH2 = 32
TILE_DEPTH3 = 48
TILE_DEPTH4 = 64
TILE_DEPTH5 = 80
TILE_DEPTH6 = 96
TILE_DEPTH7 = 112
TILE_DEPTH8 = 128
TILE_DEPTH9 = 144
TILE_DEPTH10 = 160
TILE_DEPTH11 = 176
TILE_DEPTH12 = 192
TILE_DEPTH13 = 208
TILE_DEPTH14 = 224
TILE_DEPTH15 = 240
TILE_DEPTH16 = 256
TILE_DEPTH17 = 272
TILE_DEPTH18 = 288
TILE_DEPTH19 = 304
TILE_DEPTH20 = 320
TILE_DEPTH21 = 336

TILE2_DEPTH1 = 17
TILE2_DEPTH2 = 34
TILE2_DEPTH3 = 51
TILE2_DEPTH4 = 68
TILE2_DEPTH5 = 85
TILE2_DEPTH6 = 102
TILE2_DEPTH7 = 119
TILE2_DEPTH8 = 136
TILE2_DEPTH9 = 153
TILE2_DEPTH10 = 170
TILE2_DEPTH11 = 187
TILE2_DEPTH12 = 204
TILE2_DEPTH13 = 221
TILE2_DEPTH14 = 238
TILE2_DEPTH15 = 255
TILE2_DEPTH16 = 272
TILE2_DEPTH17 = 289
TILE2_DEPTH18 = 306
TILE2_DEPTH19 = 323
TILE2_DEPTH20 = 340
TILE2_DEPTH21 = 357

SPRITE_DELTA_OFFSET_X = 8               ; Offset from SPRITE coords to Delta Char coords
SPRITE_DELTA_OFFSET_Y = 14

ENEMY_SPRITE_DELTA_OFFSET_X = 8
ENEMY_SPRITE_DELTA_OFFSET_Y = 14

NUMBER_OF_SPRITES_DIV_4 = 3           ; This is for my personal version, which
                                      ; loads sprites and characters under IO ROM
LEVEL_1_MAP   = $E000                 ;Address of level 1 tiles/charsets
#endregion

;===============================================================================
; GAME TIMERS
;===============================================================================
CIA1_TIMA_LO = $dc04
CIA1_TIMA_HI = $dc05
CIA1_TIMB_LO = $dc06
CIA1_TIMB_HI = $dc07

;===============================================================================
; ZERO PAGE LABELS
;===============================================================================
#region "ZeroPage"
PARAM1 = $03                 ; These will be used to pass parameters to routines
PARAM2 = $04                 ; when you can't use registers or other reasons
PARAM3 = $05                            
PARAM4 = $06                 ; essentially, think of these as extra data registers

PARAM5 = $07

TIMER = $08                  ; Timers - fast and slow, updated every frame
SLOW_TIMER = $09

WPARAM1 = $0A                ; Word length Params. Same as above only room for 2
WPARAM2 = $0C                ; bytes (or an address)
WPARAM3 = $0E

;---------------------------- $11 - $16 available

ZEROPAGE_POINTER_1 = $17
ZEROPAGE_POINTER_2 = $19
ZEROPAGE_POINTER_3 = $21
ZEROPAGE_POINTER_4 = $23

CURRENT_SCREEN   = $25       ; Pointer to current front screen
CURRENT_BUFFER   = $27       ; Pointer to current back buffer

SCROLL_COUNT_X   = $29       ; Current hardware scroll value
SCROLL_COUNT_Y   = $2A
SCROLL_SPEED     = $2B       ; Scroll speed (not implemented yet)
SCROLL_DIRECTION = $2C       ; Direction we are scrolling in
SCROLL_MOVING    = $2D       ; are we moving? (Set to direction of scrolling)
                             ; This is for resetting back to start frames

                            ; All data is for the top left corner of the visible map area
MAP_POS_ADDRESS = $2E       ; (2 bytes) pointer to current address in the level map
MAP_X_POS       = $30       ; Current map x position (in tiles)
MAP_Y_POS       = $31       ; Current map y position (in tiles)
MAP_X_DELTA     = $32       ; Map sub tile delta (in characters)
MAP_Y_DELTA     = $33       ; Map sub tile delta (in characters)

ENMAP_X_POS       = $34       ; Current map x position (in tiles)
ENMAP_Y_POS       = $35       ; Current map y position (in tiles)
ENMAP_X_DELTA     = $36       ; Map sub tile delta (in characters)
ENMAP_Y_DELTA     = $37       ; Map sub tile delta (in characters)

#endregion

;===============================================================================
; BASIC KICKSTART
;===============================================================================
KICKSTART
; Sys call to start the program - 10 SYS (2064)

;*=$0801

;        BYTE $0E,$08,$0A,$00,$9E,$20,$28,$32,$30,$36,$34,$29,$00,$00,$00

;===============================================================================
; START OF GAME PROJECT
;===============================================================================
*=$0810

PRG_START
        lda #0                          ; Turn off sprites 
        sta VIC_SPRITE_ENABLE

        lda VIC_SCREEN_CONTROL          ; turn screen off with bit 4
        and #%11100000                  ; mask out bit 4 - Screen on/off
        sta VIC_SCREEN_CONTROL          ; save back - setting bit 4 to off

;===============================================================================
; SETUP VIC BANK MEMORY
;===============================================================================
#region "VIC Setup"
        ; To set the VIC bank we have to change the first 2 bits in the
        ; CIA 2 register. So we want to be careful and only change the
        ; bits we need to.

        lda VIC_BANK            ; Fetch the status of CIA 2 ($DD00)
        and #%11111100          ; mask for bits 2-8
        ora #%00000010          ; the first 2 bits are your desired VIC bank value
                                ; In this case bank 1 ($4000 - $7FFF)
        sta VIC_BANK
       

;===============================================================================
; CHARACTER SET ENABLE: SCREEN MEMORY
;===============================================================================
        ; Within the VIC Bank we can set where we want our screen and character
        ; set memory to be using the VIC_MEMORY_CONTROL at $D018
        ; It is important to note that the values given are RELATIVE to the start
        ; address of the VIC bank you are using.
       
        lda #%00000010   ; bits 1-3 (001) = character memory 2 : $0800 - $0FFF
                         ; bits 4-7 (000) = screen memory 0 : $0000 - $03FF

        sta VIC_MEMORY_CONTROL

        ; Because these are RELATIVE to the VIC banks base address (Bank 1 = $4000)
        ; this gives us a base screen memory address of $4000 and a base
        ; character set memory of $4800
        ; 
        ; Sprite pointers are the last 8 bytes of screen memory (25 * 40 = 1000 and
        ; yet each screen reserves 1024 bytes). So Sprite pointers start at
        ; $4000 + $3f8.

        ; After alloction of VIC Memory for Screen, backbuffer, scoreboard, and
        ; 2 character sets , arranged to one solid block of mem,
        ; Sprite data starts at $5C00 - giving the initial image a pointer value of $70
        ; and allowing for up to 144 sprite images

#endregion  
;===============================================================================
; SYSTEM INITIALIZATION
;===============================================================================
#region "System Setup"
System_Setup

        ; Here is where we copy level 1 data from the start setup to under
        ; $E000 so we can use it later when the game resets.
        ; A little bank switching is involved here.
        sei           

        ; Here you load and store the Processor Port ($0001), then use 
        ; it to turn off LORAM (BASIC), HIRAM (KERNAL), CHAREN (CHARACTER ROM)
        ; then use a routine to copy your sprite and character mem under there
        ; before restoring the original value of $0001 and turning interrupts
        ; back on.

        lda PROC_PORT                   ; store ram setup
        sta PARAM1

        lda #%00110000                  ; Switch out BASIC, KERNAL, CHAREN, IO
        sta PROC_PORT

        ; When the game starts, Level 1 tiles and characters are stored in place to run,
        ; However, when the game resets we will need to restore these levels intact.
        ; So we're saving them away to load later under the KERNAL at $E000-$EFFF (4k)
        ; To do this we need to do some bank switching, copy data, then restore as
        ; we may use the KERNAL later for some things.

        lda PARAM1                      ; restore ram setup
        sta PROC_PORT
        cli
#endregion
;===============================================================================
; SCREEN SETUP
;===============================================================================
#region "Screen Setup"
Screen_Setup
        lda #COLOR_BLACK
        sta VIC_BACKGROUND_COLOR 
        lda #COLOR_GREY2
        sta VIC_CHARSET_MULTICOLOR_1
        lda #COLOR_GREY1
        sta VIC_CHARSET_MULTICOLOR_2

        loadPointer CURRENT_SCREEN,SCREEN1_MEM
        loadPointer CURRENT_BUFFER,SCREEN2_MEM

; Load in Hotel: Chars, Map, Attribs & Tiles
; from our Disk Image

        ldx #0
        jsr LoadChsetFromDisk
        ;ldx #1
        ;jsr LoadChsetFromDisk
        ;ldx #2
        ;jsr LoadChsetFromDisk
        ;ldx #3
        ;jsr LoadChsetFromDisk
        
        ;jsr LoadHotelTilesFromDisk

        ;jsr LoadHotelMap
        ;jsr LoadNewTiles

        ldx #3                        ; (129,26=default), 61
        ldy #2                          ; , 27

        jsr DrawMap                     ; Draw the level map (Screen1)
                                        ; And initialize it

        jsr CopyToBuffer                ; Copy to the backbuffer(Screen2)


;*******************************************************************************
;               TURN OFF 2nd Screen Stats Display (FOR NOW)
;******************************************************************************'

        ;loadpointer ZEROPAGE_POINTER_1, CONSOLE_TEXT
        loadpointer ZEROPAGE_POINTER_1, ADMIN_TEST_DISPLAY      ; Debugger
        ;loadpointer ZEROPAGE_POINTER_1, GAME_PANEL_DISPLAY

        lda #0                          ; PARAM1 contains X screen coord (column)
        sta PARAM1
        lda #19                         ; PARAM2 contains Y screen coord (row)
        sta PARAM2
        lda #COLOR_WHITE                ; PARAM3 contains the color to use
        sta PARAM3
        jsr DisplayText                 ; Then we display the stats panel
       
        jsr WaitFrame
        jsr InitRasterIRQ               ; Setup raster interrupts
        jsr WaitFrame

        
        lda #%00011011                  ; Default (Y scroll = 3 by default)    
        sta VIC_SCREEN_CONTROL
        lda #COLOR_BLACK
        sta VIC_BORDER_COLOR

#endregion

;===============================================================================
;  SPRITE SETUP
;===============================================================================
#region "Sprite Setup"

Sprite_Setup
        lda #0
        sta VIC_SPRITE_ENABLE           ; Turn all sprites off
        sta VIC_SPRITE_X_EXTEND         ; clear all extended X bits
        sta SPRITE_POS_X_EXTEND         ; in registers and data

        jsr PlayerInit
        jsr EnemySetup

        lda #%11111111                  ; Turn on sprites 0 1 and 7
        sta VIC_SPRITE_ENABLE 

#endregion 

;===============================================================================
;  MAIN LOOP
;===============================================================================
MainLoop
        jsr WaitFrame                   ; wait for the vertical blank period
        jsr UpdateTimers
        jsr UpdatePlayer                 ; Player animation, etc.
        jsr UpdateScroll
        jsr UpdateEnemy                  ; Enemy animation, etc.
        jsr DisplaySpriteInfoNow              ; Display simple debug info
        ;jsr AnimateStreetLight
        jmp MainLoop

;===============================================================================
; FILES IN GAME PROJECT
;===============================================================================
        incAsm "Collision_Routines.asm"
        incAsm "Game_Interrupts.asm"
        incAsm "Game_Routines.asm"                  ; core framework routines
        incAsm "Player_Routines.asm"
        incAsm "Attacker.asm"
        incAsm "Screen_Memory.asm"                ; screen drawing and handling
        incAsm "Start_Level.asm
        incAsm "Scrolling.asm"
        incAsm "Sprite_Routines.asm"
        incAsm "Attacker_Collision.asm"

;===============================================================================
;  JOYSTICK
;===============================================================================
DisplaySpriteInfo

        jsr admintest
        rts

;******************************************************************************
; Turn off regular display for NOW
; (It is commented out)
;******************************************************************************


;        lda JOY_X
;        bne DisplaySpriteInfoNow
;        lda JOY_Y
;        bne DisplaySpriteInfoNow
;        rts


; 4/5/25
; Implemented this routine to test write out hex values
; For example: First testing consisted of checking if
; ATTRIBUTE2_MEM is reading data into its memory since
; the sprite kept falling through the map (BackAlleyway)

; We will set up a loop here that displays the values
; on the screen in a row as they are seen in memory.
; Note: C64 Debugger may be helpful here later.


DisplaySpriteInfoNow
admintest

;MAP_CHAR_MEM

        lda maptwoloaded
        ldx #19
        ldy #3
        jsr DisplayByte

        lda $4800 + 16
        ldx #19
        ldy #6
        jsr DisplayByte

        lda $4800 + 17
        ldx #19
        ldy #9
        jsr DisplayByte

        lda $4800 + 18
        ldx #19
        ldy #12
        jsr DisplayByte

        lda $4800 + 19
        ldx #19
        ldy #15
        jsr DisplayByte
 
        lda $4800 + 20
        ldx #19
        ldy #18
        jsr DisplayByte

        lda $4800 + 21
        ldx #19
        ldy #21
        jsr DisplayByte

        lda hotelchars
        ldx #20
        ldy #3
        jsr DisplayByte

;        lda filehi
;        ldx #20
;        ldy #21
;        jsr DisplayByte

;        lda MAP_CHAR_MEM + 17
;        ldx #20
;        ldy #9
;        jsr DisplayByte


        loadPointer WPARAM1,SCORE_SCREEN
        rts

        lda ATTRIBUTE2_MEM
        ldx #19
        ldy #3
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 1                          
        ldx #19 
        ldy #6
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 2                          
        ldx #19 
        ldy #9
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 3                          
        ldx #19 
        ldy #12
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 4                          
        ldx #19 
        ldy #15
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 5                          
        ldx #19 
        ldy #18
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 6                          
        ldx #19 
        ldy #21
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 7                          
        ldx #19 
        ldy #24
        jsr DisplayByte
       
        lda ATTRIBUTE2_MEM + 8                          
        ldx #19 
        ldy #27
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 9                          
        ldx #19 
        ldy #30
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 10                          
        ldx #19 
        ldy #33
        jsr DisplayByte

        lda ATTRIBUTE2_MEM + 11                          
        ldx #19 
        ldy #36
        jsr DisplayByte


        loadPointer WPARAM1,SCORE_SCREEN

        rts

; Line 1        
        lda COLLIDER_ATTR
        ldx #19
        ldy #7
        jsr DisplayByte

        lda ActiveTimer
        ldx #2
        ldx #19
        ldy #16
        jsr DisplayByte

        ldx #1
        lda SPRITE_POS_X,x
        ldx #19
        ldy #25
        jsr DisplayByte



; Line 2
        lda ENEMY_COLLIDER_ATTR                           
        ldx #20 
        ldy #7
        jsr DisplayByte

        lda PLAYER_JUMP_POS
        ldx #20
        ldy #16
        jsr DisplayByte

        lda MAP_X_POS
        ldx #20
        ldy #25
        jsr DisplayByte

        ldx #1
        lda MAP_Y_POS
        ldx #20
        ldy #33
        jsr DisplayByte

; Line 3
        ldx #3
        lda SPRITE_POS_X,x
        ldx #22
        ldy #7
        jsr DisplayByte

        lda WaitToFireCD
        ldx #22
        ldy #15
        jsr DisplayByte

        lda FiringHoldCD
        ldx #22
        ldy #23
        jsr DisplayByte

        ldx #2
        lda SPRITE_ANIM_TIMER,x
        ldx #22
        ldy #32
        jsr DisplayByte

; Line 4
        lda gamescore
        ldx #23 
        ldy #6  
        jsr ScoreBoard

        lda ENEMY_BULLETS
        ldx #23
        ldy #23
        jsr DisplayByte

        lda $d010
        ldx #23
        ldy #32
        jsr DisplayByte
        rts

SPRITE_CONSOLE_TEXT
        byte ' coll:$   timr:$   spcx:$   spcy:$      /'
        byte ' enco:$   jump:$   mapx:$   mapy:$      /'
        byte '                                        /'
        byte ' enyx:$   wfir:$: frhd:$   actv:$       /'
        byte ' score:$      bullets:$   msbx:$            ',0

GAME_PANEL_DISPLAY
        byte '            c64brain.com                /'
        byte '                                        /'
        byte '             GAME DEMO                  /'
        byte '                                        /'
        byte '      With multiple scrolling maps       ',0


ADMIN_TEST_DISPLAY
        byte '                                        /'
        byte '                                        /'
        byte '                                        /'
        byte '                                        /'
        byte '                                            ',0

JOY_X                           ; current positon of Joystick(2)
        byte $00                ; -1 0 or +1
JOY_Y
        byte $00                ; -1 0 or +1
NE_DIR
        byte $00
JOY_NW
        byte $00

BUTTON_PRESSED                  ; holds 1 when the button is held down
        byte $00
                                ; holds 1 when a single press is made (button released)
BUTTON_ACTION                   
        byte $00

;-------------------------------------------------------------------------------
; Bit Table
; Take a value from 0 to 7 and return it's bit value
BIT_TABLE
        byte 1,2,4,8,16,32,64,128


;*=$4000
;===============================================================================
; VIC MEMORY BLOCK
; CHARSET AND SPRITE DATA
;===============================================================================
; Charset and Sprite data directly loaded here.

VIC_DATA_INCLUDES

; VIC VIDEO MEMORY LAYOUT - BANK 1 ($4000 - $7FFF)
; SCREEN_1         = $4000 - $43FF         (Screen 0)      ; Double buffered
; SCREEN_2         = $4400 - $47FF         (Screen 1)      ; game screen
; MAP_CHARSET1     = $4800 - $5FFF         (Charset 1)     ; game chars (tiles)
; MAP_CHARSET2     = $5000 - $5FFF         (Charset 1)     ; game chars (tiles)
; SCORE_CHARS      = $5800 - $57FF         (Charset 2)     ; Scoreboard chars
; SCORE_SCREEN     = $5800 - $5BFF         (Screen 6)      ; Scoreboard Screen
; SPRITES          = $5COO - $7FFF         (144 Sprite Images)

;*******************************************************************************
;                             HOTEL MAP
;*******************************************************************************

;*=$4800
MAP_CHAR_MEM                            ; Character set for map screen
;incbin"Maps2025/GameProjectHomeDay3fbk - Chars.bin"
;incbin"Maps2025/GameProjectHomeDay3fTextMulticolor - Chars.bin"

*=$5000

*=$5800
SCORE_CHAR_MEM
IGNOREBLOCKSTART##
	BYTE	60,102,222,212,218,102,60,0
	BYTE	56,108,198,198,254,198,198,0
	BYTE	252,198,198,252,198,198,252,0
	BYTE	60,102,192,192,192,102,60,0
	BYTE	248,204,198,198,198,204,248,0
	BYTE	126,96,96,124,96,96,126,0
	BYTE	126,96,96,124,96,96,96,0
	BYTE	62,96,192,206,198,102,62,0
	BYTE	198,198,198,254,198,198,198,0
	BYTE	126,24,24,24,24,24,126,0
	BYTE	6,6,6,6,6,198,124,0
	BYTE	198,204,216,240,248,220,206,0
	BYTE	96,96,96,96,96,96,126,0
	BYTE	198,238,254,254,214,198,198,0
	BYTE	198,230,246,254,222,206,198,0
	BYTE	124,198,198,198,198,198,124,0
	BYTE	252,198,198,198,252,192,192,0
	BYTE	124,198,198,198,222,204,122,0
	BYTE	252,198,198,206,248,220,206,0
	BYTE	120,204,192,124,6,198,124,0
	BYTE	126,24,24,24,24,24,24,0
	BYTE	198,198,198,198,198,198,124,0
	BYTE	198,198,198,238,124,56,16,0
	BYTE	198,198,214,254,254,238,198,0
	BYTE	198,238,124,56,124,238,198,0
	BYTE	102,102,102,60,24,24,24,0
	BYTE	254,14,28,56,112,224,254,0
	BYTE	60,48,48,48,48,48,60,0
	BYTE	12,18,48,124,48,98,252,0
	BYTE	60,12,12,12,12,12,60,0
	BYTE	0,24,60,126,24,24,24,24
	BYTE	0,16,48,127,127,48,16,0
	BYTE	0,0,0,0,0,0,0,0
	BYTE	24,24,24,24,0,0,24,0
	BYTE	102,102,102,0,0,0,0,0
	BYTE	102,102,255,102,255,102,102,0
	BYTE	24,62,96,60,6,124,24,0
	BYTE	98,102,12,24,48,102,70,0
	BYTE	60,102,60,56,103,102,63,0
	BYTE	6,12,24,0,0,0,0,0
	BYTE	12,24,48,48,48,24,12,0
	BYTE	48,24,12,12,12,24,48,0
	BYTE	1,3,7,14,156,248,112,32
	BYTE	0,24,24,126,24,24,0,0
	BYTE	0,0,0,0,0,24,24,48
	BYTE	0,0,0,126,0,0,0,0
	BYTE	0,0,0,0,0,24,24,0
	BYTE	0,3,6,12,24,48,96,0
	BYTE	56,76,198,198,198,100,56,0
	BYTE	24,56,24,24,24,24,126,0
	BYTE	124,198,14,60,120,224,254,0
	BYTE	126,12,24,60,6,198,124,0
	BYTE	28,60,108,204,254,12,12,0
	BYTE	252,192,252,6,6,198,124,0
	BYTE	60,96,192,252,198,198,124,0
	BYTE	254,198,12,24,48,48,48,0
	BYTE	120,196,228,120,222,198,124,0
	BYTE	124,198,198,126,6,12,120,0
	BYTE	0,0,24,0,0,24,0,0
	BYTE	0,0,24,0,0,24,24,48
	BYTE	14,24,48,96,48,24,14,0
	BYTE	0,0,126,0,126,0,0,0
	BYTE	112,24,12,6,12,24,112,0
	BYTE	60,102,6,12,24,0,24,0
	BYTE	0,127,127,127,0,247,247,247
	BYTE	85,85,85,85,85,85,85,85
	BYTE	24,24,24,24,24,24,24,24
	BYTE	0,0,0,255,255,0,0,0
	BYTE	0,0,255,255,0,0,0,0
	BYTE	0,255,255,0,0,0,0,0
	BYTE	0,0,0,0,255,255,0,0
	BYTE	48,48,48,48,48,48,48,48
	BYTE	12,12,12,12,12,12,12,12
	BYTE	0,0,0,224,240,56,24,24
	BYTE	24,24,28,15,7,0,0,0
	BYTE	24,24,56,240,224,0,0,0
	BYTE	192,192,192,192,192,192,255,255
	BYTE	192,224,112,56,28,14,7,3
	BYTE	3,7,14,28,56,112,224,192
	BYTE	255,255,192,192,192,192,192,192
	BYTE	255,255,3,3,3,3,3,3
	BYTE	0,60,126,126,126,126,60,0
	BYTE	0,0,0,0,0,255,255,0
	BYTE	54,127,127,127,62,28,8,0
	BYTE	96,96,96,96,96,96,96,96
	BYTE	0,0,0,7,15,28,24,24
	BYTE	195,231,126,60,60,126,231,195
	BYTE	0,60,126,102,102,126,60,0
	BYTE	24,24,102,102,24,24,60,0
	BYTE	6,6,6,6,6,6,6,6
	BYTE	8,28,62,127,62,28,8,0
	BYTE	24,24,24,255,255,24,24,24
	BYTE	192,192,48,48,192,192,48,48
	BYTE	24,24,24,24,24,24,24,24
	BYTE	0,0,3,62,118,54,54,0
	BYTE	255,127,63,31,15,7,3,1
	BYTE	0,0,0,0,0,0,0,0
	BYTE	240,240,240,240,240,240,240,240
	BYTE	0,0,0,0,255,255,255,255
	BYTE	255,0,0,0,0,0,0,0
	BYTE	0,0,0,0,0,0,0,255
	BYTE	192,192,192,192,192,192,192,192
	BYTE	204,204,51,51,204,204,51,51
	BYTE	3,3,3,3,3,3,3,3
	BYTE	0,0,0,0,204,204,51,51
	BYTE	255,254,252,248,240,224,192,128
	BYTE	3,3,3,3,3,3,3,3
	BYTE	24,24,24,31,31,24,24,24
	BYTE	0,0,0,0,15,15,15,15
	BYTE	24,24,24,31,31,0,0,0
	BYTE	0,0,0,248,248,24,24,24
	BYTE	0,0,0,0,0,0,255,255
	BYTE	0,0,0,31,31,24,24,24
	BYTE	24,24,24,255,255,0,0,0
	BYTE	0,0,0,255,255,24,24,24
	BYTE	24,24,24,248,248,24,24,24
	BYTE	192,192,192,192,192,192,192,192
	BYTE	224,224,224,224,224,224,224,224
	BYTE	7,7,7,7,7,7,7,7
	BYTE	255,255,0,0,0,0,0,0
	BYTE	255,255,255,0,0,0,0,0
	BYTE	0,0,0,0,0,255,255,255
	BYTE	3,3,3,3,3,3,255,255
	BYTE	0,0,0,0,240,240,240,240
	BYTE	15,15,15,15,0,0,0,0
	BYTE	24,24,24,248,248,0,0,0
	BYTE	240,240,240,240,0,0,0,0
	BYTE	240,240,240,240,15,15,15,15
	BYTE	238,136,232,40,238,0,0,0
	BYTE	231,195,153,129,153,153,153,255
	BYTE	131,153,153,131,153,153,131,255
	BYTE	195,153,159,159,159,153,195,255
	BYTE	135,147,153,153,153,147,135,255
	BYTE	129,159,159,135,159,159,129,255
	BYTE	129,159,159,135,159,159,159,255
	BYTE	195,153,159,145,153,153,195,255
	BYTE	153,153,153,129,153,153,153,255
	BYTE	195,231,231,231,231,231,195,255
	BYTE	225,243,243,243,243,147,199,255
	BYTE	153,147,135,143,135,147,153,255
	BYTE	159,159,159,159,159,159,129,255
	BYTE	156,136,128,148,156,156,156,255
	BYTE	153,137,129,129,145,153,153,255
	BYTE	195,153,153,153,153,153,195,255
	BYTE	0,60,60,60,0,60,60,60
	BYTE	195,153,153,153,153,195,241,255
	BYTE	131,153,153,131,135,147,153,255
	BYTE	195,153,159,195,249,153,195,255
	BYTE	129,231,231,231,231,231,231,255
	BYTE	153,153,153,153,153,153,195,255
	BYTE	153,153,153,153,153,195,231,255
	BYTE	156,156,156,148,128,136,156,255
	BYTE	153,153,195,231,195,153,153,255
	BYTE	255,255,255,255,170,85,170,85
	BYTE	255,255,255,255,170,85,170,85
	BYTE	195,207,207,207,207,207,195,255
	BYTE	243,237,207,131,207,157,3,255
	BYTE	195,243,243,243,243,243,195,255
	BYTE	255,231,195,129,231,231,231,231
	BYTE	255,239,207,128,128,207,239,255
	BYTE	255,255,255,255,255,255,255,255
	BYTE	231,231,231,231,255,255,231,255
	BYTE	153,153,153,255,255,255,255,255
	BYTE	153,153,0,153,0,153,153,255
	BYTE	231,193,159,195,249,131,231,255
	BYTE	157,153,243,231,207,153,185,255
	BYTE	195,153,195,199,152,153,192,255
	BYTE	249,243,231,255,255,255,255,255
	BYTE	243,231,207,207,207,231,243,255
	BYTE	207,231,243,243,243,231,207,255
	BYTE	255,153,195,0,195,153,255,255
	BYTE	255,231,231,129,231,231,255,255
	BYTE	255,255,255,255,255,231,231,207
	BYTE	255,255,255,129,255,255,255,255
	BYTE	255,255,255,255,255,231,231,255
	BYTE	255,252,249,243,231,207,159,255
	BYTE	195,153,145,137,153,153,195,255
	BYTE	231,231,199,231,231,231,129,255
	BYTE	195,153,249,243,207,159,129,255
	BYTE	195,153,249,227,249,153,195,255
	BYTE	249,241,225,153,128,249,249,255
	BYTE	129,159,131,249,249,153,195,255
	BYTE	195,153,159,131,153,153,195,255
	BYTE	129,153,243,231,231,231,231,255
	BYTE	195,153,153,195,153,153,195,255
	BYTE	195,153,153,193,249,153,195,255
	BYTE	255,255,231,255,255,231,255,255
	BYTE	255,255,231,255,255,231,231,207
	BYTE	241,231,207,159,207,231,241,255
	BYTE	255,255,129,255,129,255,255,255
	BYTE	143,231,243,249,243,231,143,255
	BYTE	195,153,249,243,231,255,231,255
	BYTE	195,15,60,240,195,15,60,240
	BYTE	247,227,193,128,128,227,193,255
	BYTE	231,231,231,231,231,231,231,231
	BYTE	255,255,255,0,0,255,255,255
	BYTE	255,255,0,0,255,255,255,255
	BYTE	255,0,0,255,255,255,255,255
	BYTE	255,255,255,255,0,0,255,255
	BYTE	207,207,207,207,207,207,207,207
	BYTE	243,243,243,243,243,243,243,243
	BYTE	255,255,255,31,15,199,231,231
	BYTE	231,231,227,240,248,255,255,255
	BYTE	231,231,199,15,31,255,255,255
	BYTE	63,63,63,63,63,63,0,0
	BYTE	63,31,143,199,227,241,248,252
	BYTE	252,248,241,227,199,143,31,63
	BYTE	0,0,63,63,63,63,63,63
	BYTE	0,0,252,252,252,252,252,252
	BYTE	255,195,129,129,129,129,195,255
	BYTE	255,255,255,255,255,0,0,255
	BYTE	201,128,128,128,193,227,247,255
	BYTE	159,159,159,159,159,159,159,159
	BYTE	255,255,255,248,240,227,231,231
	BYTE	60,24,129,195,195,129,24,60
	BYTE	255,195,129,153,153,129,195,255
	BYTE	231,231,153,153,231,231,195,255
	BYTE	249,249,249,249,249,249,249,249
	BYTE	247,227,193,128,193,227,247,255
	BYTE	231,231,231,0,0,231,231,231
	BYTE	63,63,207,207,63,63,207,207
	BYTE	231,231,231,231,231,231,231,231
	BYTE	255,255,252,193,137,201,201,255
	BYTE	0,128,192,224,240,248,252,254
	BYTE	255,255,255,255,255,255,255,255
	BYTE	15,15,15,15,15,15,15,15
	BYTE	255,255,255,255,0,0,0,0
	BYTE	0,255,255,255,255,255,255,255
	BYTE	255,255,255,255,255,255,255,0
	BYTE	63,63,63,63,63,63,63,63
	BYTE	51,51,204,204,51,51,204,204
	BYTE	252,252,252,252,252,252,252,252
	BYTE	255,255,255,255,51,51,204,204
	BYTE	0,1,3,7,15,31,63,127
	BYTE	252,252,252,252,252,252,252,252
	BYTE	231,231,231,224,224,231,231,231
	BYTE	255,255,255,255,240,240,240,240
	BYTE	231,231,231,224,224,255,255,255
	BYTE	255,255,255,7,7,231,231,231
	BYTE	255,255,255,255,255,255,0,0
	BYTE	247,247,247,227,227,227,193,193
	BYTE	231,231,231,0,0,255,255,255
	BYTE	255,255,255,0,0,231,231,231
	BYTE	231,231,231,7,7,231,231,231
	BYTE	63,63,63,63,63,63,63,63
	BYTE	31,31,31,31,31,31,31,31
	BYTE	248,248,248,248,248,248,248,248
	BYTE	0,0,255,255,255,255,255,255
	BYTE	0,0,0,255,255,255,255,255
	BYTE	255,255,255,255,255,0,0,0
	BYTE	252,252,252,252,252,252,0,0
	BYTE	255,255,255,255,15,15,15,15
	BYTE	240,240,240,240,255,255,255,255
	BYTE	231,231,231,7,7,255,255,255
	BYTE	15,15,15,15,255,255,255,255
	BYTE	15,15,15,15,240,240,240,240
IGNOREBLOCKEND##
incbin "ScoreChars.cst",0,255           ; Character set for scoreboard

*=$5C00

IGNOREBLOCKSTART##
 byte $00,$00,$30,$00,$00,$00,$00,$54
 byte $00,$00,$54,$00,$00,$54,$00,$00
 byte $FC,$00,$00,$74,$00,$05,$FD,$00
 byte $15,$DD,$40,$5E,$76,$D0,$5E,$5E
 byte $D0,$7E,$7E,$F4,$FE,$7E,$F4,$FE
 byte $7A,$F4,$D6,$9A,$FC,$F6,$9A,$7C
 byte $75,$9A,$7D,$7F,$96,$5D,$5F,$96
 byte $5D,$06,$95,$FC,$0A,$95,$F4,$00
 byte $A5,$77,$5F,$67,$DB,$5F,$67,$FF
 byte $82,$00,$55,$04,$05,$A7,$11,$1E
 byte $A9,$C4,$1E,$A9,$D4,$1E,$A9,$10
 byte $1E,$9E,$40,$1F,$9E,$90,$07,$9E
 byte $90,$07,$9E,$40,$07,$9E,$40,$07
 byte $9E,$40,$07,$9E,$40,$07,$9E,$40
 byte $01,$45,$00,$07,$9E,$40,$07,$9E
 byte $40,$1E,$57,$90,$19,$01,$90,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $54,$00,$00,$54,$00,$00,$54,$00
 byte $00,$FC,$00,$00,$74,$00,$05,$FD
 byte $00,$15,$DD,$40,$5E,$76,$D0,$5E
 byte $5E,$D0,$7E,$7E,$F4,$FE,$7E,$F4
 byte $FE,$7A,$F4,$D6,$9A,$F4,$F6,$9A
 byte $7D,$75,$9A,$7D,$7F,$66,$5D,$00
 byte $66,$5D,$40,$A5,$FE,$40,$A5,$F5
 byte $80,$01,$55,$40,$06,$AA,$00,$1E
 byte $AA,$90,$1E,$AA,$90,$1E,$AA,$80
 byte $1E,$9E,$40,$1F,$9E,$40,$07,$9E
 byte $40,$07,$9E,$00,$07,$95,$00,$07
 byte $9B,$00,$07,$9A,$40,$07,$86,$40
 byte $01,$41,$00,$07,$90,$00,$1E,$40
 byte $00,$19,$00,$00,$04,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",1,4,true        ; idle (28,33)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$54,$00,$00
 byte $54,$00,$00,$54,$00,$00,$54,$00
 byte $00,$FC,$00,$00,$74,$00,$01,$FD
 byte $40,$05,$DD,$D0,$1E,$76,$D0,$1E
 byte $5E,$F4,$1E,$7E,$F4,$7E,$7E,$FD
 byte $7E,$7A,$7D,$7E,$9A,$5D,$76,$9A
 byte $7D,$F6,$99,$74,$F6,$A7,$C4,$00
 byte $A7,$DD,$70,$A4,$E5,$70,$A6,$DE
 byte $80,$01,$5D,$10,$07,$A8,$40,$07
 byte $AA,$00,$07,$AA,$90,$1E,$AA,$90
 byte $1E,$9E,$90,$1E,$5E,$90,$1E,$9E
 byte $50,$17,$9E,$50,$05,$5E,$50,$07
 byte $9E,$50,$16,$9E,$50,$1E,$5E,$40
 byte $09,$15,$00,$00,$1E,$40,$00,$17
 byte $90,$00,$07,$90,$00,$01,$40,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",5,6,true
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$01,$55,$00,$01,$55,$00,$01
 byte $55,$00,$01,$55,$00,$00,$54,$00
 byte $02,$9A,$00,$01,$75,$00,$01,$FD
 byte $00,$06,$A6,$40,$1F,$A6,$D0,$1E
 byte $A7,$D0,$7F,$A7,$F4,$7F,$A7,$F4
 byte $7E,$9A,$F4,$FF,$9B,$F4,$F6,$9A
 byte $3D,$F6,$9A,$7D,$C6,$6A,$5D,$00
 byte $6A,$5D,$F6,$6A,$7D,$D1,$69,$5D
 byte $82,$05,$55,$00,$06,$AA,$40,$1E
 byte $AA,$90,$1E,$AA,$90,$1E,$9E,$90
 byte $1E,$56,$90,$1E,$9E,$90,$07,$9E
 byte $40,$07,$9E,$40,$07,$9E,$40,$07
 byte $9E,$40,$07,$9E,$40,$07,$9E,$40
 byte $01,$45,$00,$07,$9E,$40,$07,$9E
 byte $40,$01,$45,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$54
 byte $00,$01,$55,$00,$01,$55,$00,$01
 byte $55,$00,$01,$55,$00,$01,$55,$00
 byte $00,$54,$00,$02,$BA,$00,$01,$FD
 byte $00,$06,$A6,$40,$1F,$A6,$D0,$1F
 byte $A7,$D0,$1F,$A6,$F4,$1E,$A7,$F4
 byte $7F,$9B,$F4,$7E,$9A,$7D,$7F,$9A
 byte $7D,$76,$9A,$1D,$76,$6A,$1D,$00
 byte $6A,$1D,$D6,$6A,$7C,$55,$69,$75
 byte $82,$01,$55,$7D,$07,$AA,$54,$07
 byte $AA,$40,$1E,$AA,$40,$1E,$AA,$90
 byte $1E,$9E,$90,$06,$9E,$90,$07,$97
 byte $90,$07,$97,$90,$07,$97,$40,$07
 byte $91,$90,$07,$97,$90,$07,$97,$90
 byte $01,$41,$40,$07,$90,$00,$07,$90
 byte $00,$01,$40,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$54
 byte $00,$01,$55,$00,$05,$55,$40,$05
 byte $55,$40,$05,$55,$40,$01,$55,$00
 byte $00,$54,$00,$00,$74,$00,$00,$FC
 byte $00,$06,$A6,$40,$1F,$A7,$D0,$1E
 byte $A6,$D0,$1E,$A7,$D0,$1E,$A7,$F4
 byte $7F,$9A,$F4,$7F,$9A,$F4,$7E,$9B
 byte $74,$77,$9A,$74,$F7,$6A,$74,$00
 byte $6A,$7D,$F7,$6A,$1D,$D1,$69,$04
 byte $82,$00,$55,$00,$01,$EA,$40,$07
 byte $AA,$40,$07,$BA,$40,$07,$BE,$40
 byte $1E,$9E,$40,$1E,$9E,$40,$1E,$5E
 byte $40,$1E,$5E,$40,$0E,$5E,$40,$11
 byte $5E,$40,$1E,$5E,$40,$1E,$5E,$40
 byte $06,$55,$00,$01,$1E,$40,$00,$1E
 byte $40,$00,$06,$40,$00,$01,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",7,12,true        ; rope climb (36-39)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$05,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$D4
 byte $00,$03,$F4,$00,$03,$D4,$00,$00
 byte $69,$00,$01,$AB,$40,$01,$6F,$40
 byte $01,$6F,$40,$01,$9F,$40,$01,$9F
 byte $40,$01,$9F,$40,$01,$9D,$00,$00
 byte $01,$6D,$00,$01,$6D,$00,$01,$6D
 byte $00,$00,$7D,$00,$00,$55,$00,$01
 byte $AF,$40,$01,$AF,$40,$01,$AB,$40
 byte $01,$AB,$40,$01,$AD,$00,$00,$6D
 byte $00,$00,$6D,$00,$00,$6B,$40,$00
 byte $6B,$40,$00,$6B,$40,$00,$1B,$40
 byte $00,$15,$40,$00,$5B,$40,$01,$6B
 byte $40,$01,$A5,$00,$00,$50,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$05,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$D4
 byte $00,$03,$F5,$00,$03,$DB,$40,$00
 byte $6F,$D0,$01,$EF,$D0,$01,$EF,$F4
 byte $01,$6D,$F4,$01,$69,$F4,$01,$9B
 byte $7D,$01,$9A,$DD,$01,$A7,$DD,$00
 byte $AB,$DD,$F5,$AF,$5F,$DD,$6D,$7D
 byte $82,$1D,$96,$7D,$04,$7D,$54,$00
 byte $6F,$71,$01,$AB,$75,$01,$AB,$44
 byte $01,$AB,$40,$06,$AD,$00,$06,$BD
 byte $00,$06,$F7,$40,$06,$DF,$40,$1B
 byte $DE,$D0,$1B,$7A,$D0,$57,$56,$B4
 byte $A5,$01,$94,$6A,$40,$69,$1A,$40
 byte $69,$05,$01,$A4,$00,$01,$A4,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$05,$50,$00,$05,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$D4
 byte $00,$03,$F4,$00,$03,$DD,$00,$01
 byte $67,$40,$01,$9F,$40,$01,$9F,$40
 byte $01,$7F,$40,$01,$7D,$00,$01,$F7
 byte $40,$07,$DB,$40,$1F,$5B,$40,$00
 byte $A7,$6A,$40,$AD,$59,$00,$6D,$75
 byte $80,$7D,$96,$40,$15,$7D,$00,$0D
 byte $AF,$40,$0D,$AB,$40,$01,$AB,$40
 byte $0D,$6B,$00,$01,$6D,$00,$06,$6B
 byte $40,$1A,$5B,$40,$1A,$DB,$50,$1B
 byte $5A,$D0,$1B,$46,$B4,$57,$06,$B4
 byte $A5,$01,$94,$AD,$00,$7D,$7D,$00
 byte $6D,$14,$01,$A4,$00,$01,$90,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",13,18,true       ; Walking left (14-27)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$05,$50,$00,$05,$50
 byte $00,$17,$C0,$00,$17,$40,$00,$17
 byte $C0,$00,$1F,$C0,$00,$17,$C0,$00
 byte $69,$00,$01,$EA,$40,$01,$F9,$40
 byte $01,$F9,$40,$01,$F6,$40,$01,$F6
 byte $40,$01,$F6,$40,$00,$76,$40,$00
 byte $02,$79,$00,$01,$75,$00,$01,$7D
 byte $00,$00,$7D,$00,$00,$55,$00,$01
 byte $FA,$40,$01,$FA,$40,$01,$EA,$40
 byte $01,$EA,$40,$00,$7A,$40,$00,$79
 byte $00,$00,$79,$00,$01,$E9,$00,$01
 byte $E9,$00,$01,$E9,$00,$01,$E4,$00
 byte $01,$54,$00,$01,$E5,$00,$01,$E9
 byte $40,$00,$5A,$40,$00,$05,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$05,$50,$00,$05,$50
 byte $00,$17,$C0,$00,$17,$40,$00,$17
 byte $C0,$00,$5F,$C0,$01,$E7,$C0,$07
 byte $F9,$00,$07,$FB,$40,$1F,$FB,$40
 byte $1F,$79,$40,$1F,$69,$40,$7D,$E6
 byte $40,$77,$A6,$40,$77,$DA,$40,$00
 byte $2A,$7E,$B4,$3A,$5F,$7C,$39,$76
 byte $A0,$3D,$96,$74,$15,$7D,$10,$0D
 byte $F9,$00,$0D,$EA,$40,$01,$EA,$40
 byte $01,$EA,$40,$00,$7A,$90,$00,$7E
 byte $90,$01,$DF,$90,$01,$F7,$90,$07
 byte $B7,$E4,$07,$AD,$E4,$1E,$95,$D5
 byte $16,$40,$5A,$69,$01,$A9,$69,$01
 byte $A4,$1A,$40,$50,$1A,$40,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$05,$50,$00,$05,$50
 byte $00,$17,$C0,$00,$17,$40,$00,$17
 byte $C0,$00,$1F,$C0,$00,$77,$C0,$01
 byte $D9,$40,$01,$F6,$40,$01,$F6,$40
 byte $01,$FD,$40,$00,$7D,$40,$01,$DF
 byte $40,$01,$E7,$D0,$01,$E5,$F4,$00
 byte $1A,$77,$A5,$3A,$5F,$9D,$39,$F7
 byte $92,$1D,$96,$7D,$04,$7D,$54,$01
 byte $FA,$71,$01,$EA,$75,$01,$EA,$44
 byte $00,$E9,$70,$00,$79,$44,$01,$E9
 byte $90,$01,$E5,$A4,$05,$E7,$A4,$07
 byte $A5,$E4,$1E,$91,$E4,$1E,$90,$D5
 byte $16,$40,$5A,$7D,$00,$7A,$79,$00
 byte $7D,$1A,$40,$14,$06,$40,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",19,24,true       ; Walking right (0 - 13)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$05,$50,$00,$05,$40
 byte $00,$17,$C0,$00,$17,$40,$00,$1F
 byte $C0,$00,$17,$C0,$00,$17,$00,$00
 byte $69,$00,$01,$DA,$4C,$01,$F6,$5C
 byte $01,$F6,$74,$01,$F6,$7D,$01,$F5
 byte $FD,$01,$FF,$D4,$00,$7F,$40,$00
 byte $02,$79,$00,$01,$75,$00,$01,$7D
 byte $00,$00,$7D,$00,$00,$55,$00,$01
 byte $FA,$40,$01,$FA,$40,$01,$EA,$40
 byte $01,$EA,$40,$00,$7A,$40,$00,$79
 byte $00,$00,$79,$00,$01,$E9,$00,$01
 byte $E9,$00,$01,$E9,$00,$01,$E4,$00
 byte $01,$54,$00,$01,$E5,$00,$01,$E9
 byte $40,$00,$5A,$40,$00,$05,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$05,$50,$00,$05,$50
 byte $00,$17,$C0,$00,$17,$40,$00,$17
 byte $C0,$00,$1F,$C0,$00,$17,$C0,$00
 byte $69,$00,$01,$D6,$97,$01,$79,$6B
 byte $01,$E9,$58,$01,$F9,$00,$01,$65
 byte $00,$01,$F6,$00,$00,$76,$00,$00
 byte $02,$79,$00,$01,$75,$00,$01,$7D
 byte $00,$00,$7D,$00,$00,$55,$00,$01
 byte $FA,$40,$01,$FA,$40,$01,$EA,$40
 byte $01,$EA,$40,$00,$7A,$40,$00,$79
 byte $00,$00,$79,$00,$01,$E9,$00,$01
 byte $E9,$00,$01,$E9,$00,$01,$E4,$00
 byte $01,$54,$00,$01,$E5,$00,$01,$E9
 byte $40,$00,$5A,$40,$00,$05,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",25,28,true       ; Punching to the right
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$05,$50,$00,$05,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$D4
 byte $00,$03,$F4,$00,$03,$D4,$00,$00
 byte $69,$00,$01,$AB,$40,$01,$6F,$40
 byte $01,$6F,$40,$01,$9F,$40,$01,$9F
 byte $40,$01,$9F,$40,$01,$9D,$00,$00
 byte $00,$6D,$80,$00,$5D,$40,$00,$7D
 byte $40,$00,$7D,$00,$00,$55,$00,$01
 byte $AF,$40,$01,$AF,$40,$01,$AB,$40
 byte $01,$AB,$40,$01,$AD,$00,$00,$6D
 byte $00,$00,$6D,$00,$00,$6B,$40,$00
 byte $6B,$40,$00,$6B,$40,$00,$1B,$40
 byte $00,$15,$40,$00,$5B,$40,$01,$6B
 byte $40,$01,$A5,$00,$00,$50,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$05,$50,$00,$05,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$D4
 byte $00,$03,$F4,$00,$03,$D4,$00,$00
 byte $69,$00,$D6,$97,$40,$E9,$6D,$40
 byte $25,$6B,$40,$00,$6F,$40,$00,$59
 byte $40,$00,$9F,$40,$00,$9D,$00,$00
 byte $00,$6D,$80,$00,$5D,$40,$00,$7D
 byte $40,$00,$7D,$00,$00,$55,$00,$01
 byte $AF,$40,$01,$AF,$40,$01,$AB,$40
 byte $01,$AB,$40,$01,$AD,$00,$00,$6D
 byte $00,$00,$6D,$00,$00,$6B,$40,$00
 byte $6B,$40,$00,$6B,$40,$00,$1B,$40
 byte $00,$15,$40,$00,$5B,$40,$01,$6B
 byte $40,$01,$A5,$00,$00,$50,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",29,32,true       ; Punching to the left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$05,$50,$00,$01,$50,$00
 byte $03,$D4,$00,$01,$D4,$00,$03,$F4
 byte $00,$03,$D4,$00,$00,$D4,$00,$00
 byte $69,$00,$31,$A7,$40,$35,$9F,$40
 byte $1D,$9F,$40,$7D,$9F,$40,$7F,$5F
 byte $40,$17,$FF,$40,$01,$FD,$00,$00
 byte $01,$7A,$40,$03,$7A,$40,$03,$6F
 byte $40,$01,$AB,$40,$01,$59,$40,$01
 byte $A7,$40,$01,$AB,$40,$01,$AB,$40
 byte $01,$AB,$40,$01,$AD,$00,$00,$6D
 byte $00,$00,$6D,$00,$00,$6B,$40,$00
 byte $6B,$40,$00,$6B,$40,$00,$1B,$40
 byte $00,$15,$00,$00,$5B,$40,$01,$6B
 byte $40,$01,$A5,$00,$00,$54,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",33,34,true       ; Fighting
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$55,$00,$00,$54,$00
 byte $01,$7C,$00,$01,$74,$00,$01,$FC
 byte $00,$01,$7C,$00,$01,$70,$00,$06
 byte $90,$00,$1D,$A4,$C0,$1F,$65,$C0
 byte $1F,$67,$40,$1F,$67,$D0,$1F,$5F
 byte $D0,$1F,$FD,$40,$07,$F4,$00,$00
 byte $27,$90,$00,$17,$50,$00,$17,$D0
 byte $00,$07,$D0,$00,$05,$50,$00,$1F
 byte $A5,$00,$1F,$97,$C0,$1E,$7F,$40
 byte $1E,$A7,$C2,$07,$A5,$CA,$07,$51
 byte $DA,$07,$90,$78,$1E,$90,$50,$1E
 byte $90,$00,$1E,$90,$00,$1E,$40,$00
 byte $15,$40,$00,$1E,$50,$00,$1E,$94
 byte $00,$05,$A4,$00,$00,$50,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$55,$00,$00,$54,$00
 byte $01,$7C,$00,$01,$74,$00,$01,$FC
 byte $00,$01,$7C,$00,$01,$70,$00,$06
 byte $90,$00,$1D,$A4,$C0,$1F,$65,$C0
 byte $1F,$67,$40,$1F,$67,$D0,$1F,$5F
 byte $D0,$1F,$FD,$40,$07,$F4,$00,$00
 byte $27,$90,$01,$17,$50,$06,$17,$D0
 byte $1E,$07,$D0,$7D,$05,$51,$75,$1F
 byte $A5,$D5,$1F,$97,$D4,$1E,$7F,$50
 byte $1E,$F5,$40,$07,$F5,$00,$07,$54
 byte $00,$07,$90,$00,$1E,$90,$00,$1E
 byte $90,$00,$1E,$90,$00,$1E,$40,$00
 byte $15,$40,$00,$1E,$50,$00,$1E,$94
 byte $00,$05,$A4,$00,$00,$50,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",35,38,true       ; Kicking to the right
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$55,$00,$00,$15,$00
 byte $00,$3D,$40,$00,$1D,$40,$00,$3F
 byte $40,$00,$3D,$40,$00,$0D,$40,$00
 byte $06,$90,$03,$1A,$74,$03,$59,$F4
 byte $01,$D9,$F4,$07,$D9,$F4,$07,$F5
 byte $F4,$01,$7F,$F4,$00,$1F,$D0,$00
 byte $00,$06,$D8,$00,$05,$D4,$00,$07
 byte $D4,$00,$07,$D0,$00,$05,$50,$00
 byte $5A,$F4,$03,$D6,$F4,$01,$FD,$B4
 byte $93,$DA,$B4,$A7,$5A,$D0,$A7,$45
 byte $D0,$2D,$06,$D0,$05,$06,$B4,$00
 byte $06,$B4,$00,$06,$B4,$00,$01,$B4
 byte $00,$01,$54,$00,$05,$B4,$00,$16
 byte $B4,$00,$1A,$50,$00,$05,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$55,$00,$00,$15,$00
 byte $00,$3D,$40,$00,$1D,$40,$00,$3F
 byte $40,$00,$3D,$40,$00,$0D,$40,$00
 byte $06,$90,$03,$1A,$74,$03,$59,$F4
 byte $01,$D9,$F4,$07,$D9,$F4,$07,$F5
 byte $F4,$01,$7F,$F4,$00,$1F,$D0,$00
 byte $40,$06,$D8,$90,$05,$D4,$B4,$07
 byte $D4,$7D,$07,$D0,$5D,$45,$50,$57
 byte $5A,$F4,$17,$D6,$F4,$05,$FD,$B4
 byte $01,$5F,$B4,$00,$5F,$D0,$00,$15
 byte $D0,$00,$06,$D0,$00,$06,$B4,$00
 byte $06,$B4,$00,$06,$B4,$00,$01,$B4
 byte $00,$01,$54,$00,$05,$B4,$00,$16
 byte $B4,$00,$1A,$50,$00,$05,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",39,42,true       ; Kicking to the left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$40,$00,$00,$55,$00
 byte $00,$D5,$40,$00,$3D,$55,$00,$55
 byte $55,$5A,$FF,$D5,$5A,$57,$F5,$55
 byte $00,$D6,$95,$00,$15,$55,$00,$3A
 byte $75,$00,$05,$96,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",43,43,true       ; Unused
IGNOREBLOCKSTART##
 byte $00,$05,$50,$00,$05,$50,$00,$17
 byte $C0,$00,$17,$40,$00,$17,$C0,$00
 byte $1F,$C0,$00,$17,$C0,$00,$69,$00
 byte $01,$D6,$97,$01,$79,$6B,$01,$E9
 byte $58,$01,$F9,$00,$05,$65,$00,$25
 byte $F6,$00,$55,$AF,$00,$65,$A8,$00
 byte $66,$B4,$00,$65,$D0,$00,$67,$40
 byte $00,$6C,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$50,$00,$00,$55,$00
 byte $00,$15,$40,$00,$01,$50,$00,$00
 byte $55,$5A,$00,$15,$5A,$54,$05,$5A
 byte $55,$16,$95,$05,$55,$55,$00,$5A
 byte $75,$00,$15,$96,$00,$00,$00,$00
 byte $00,$05,$50,$00,$05,$50,$00,$17
 byte $C0,$00,$17,$40,$00,$17,$C0,$00
 byte $1F,$C0,$00,$17,$C0,$00,$69,$00
 byte $01,$D6,$97,$01,$79,$6B,$01,$E9
 byte $58,$01,$F9,$00,$05,$65,$00,$25
 byte $F6,$40,$55,$AF,$50,$65,$A8,$D4
 byte $66,$B4,$34,$65,$D0,$00,$67,$40
 byte $00,$6C,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",44,46,true       ; Swimming to the right
IGNOREBLOCKSTART##
 byte $05,$50,$00,$05,$50,$00,$03,$D4
 byte $00,$01,$D4,$00,$03,$D4,$00,$03
 byte $F4,$00,$03,$D4,$00,$00,$69,$00
 byte $D6,$97,$40,$E9,$6D,$40,$25,$6B
 byte $40,$00,$6F,$40,$00,$59,$50,$00
 byte $9F,$58,$00,$FA,$55,$00,$2A,$59
 byte $00,$1E,$99,$00,$07,$59,$00,$01
 byte $D9,$00,$00,$39,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$01,$00,$00
 byte $55,$00,$01,$57,$00,$55,$7C,$A5
 byte $55,$55,$A5,$57,$FF,$55,$5F,$D5
 byte $56,$97,$00,$55,$54,$00,$5D,$AC
 byte $00,$96,$50,$00,$00,$00,$00,$00
 byte $05,$50,$00,$05,$50,$00,$03,$D4
 byte $00,$01,$D4,$00,$03,$D4,$00,$03
 byte $F4,$00,$03,$D4,$00,$00,$69,$00
 byte $D6,$97,$40,$E9,$6D,$40,$25,$6B
 byte $40,$00,$6F,$40,$00,$59,$50,$01
 byte $9F,$58,$05,$FA,$55,$17,$2A,$59
 byte $1C,$1E,$99,$00,$07,$59,$00,$01
 byte $D9,$00,$00,$39,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$05,$00,$00
 byte $55,$00,$01,$54,$00,$05,$40,$A5
 byte $55,$00,$A5,$54,$00,$A5,$50,$15
 byte $56,$94,$55,$55,$55,$50,$5D,$A5
 byte $00,$96,$54,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",47,50,true       ; Swimming to the left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$01,$54,$00,$01,$54,$00
 byte $05,$F0,$00,$05,$D0,$00,$05,$F0
 byte $00,$07,$F0,$00,$05,$F2,$00,$1A
 byte $40,$95,$75,$A5,$E5,$5E,$5A,$D0
 byte $7A,$59,$80,$7E,$64,$80,$59,$50
 byte $00,$7D,$80,$00,$1D,$80,$00,$00
 byte $9E,$40,$00,$5D,$40,$00,$5F,$40
 byte $00,$1F,$40,$00,$15,$40,$00,$7E
 byte $90,$00,$7E,$90,$00,$7A,$90,$00
 byte $7A,$90,$00,$1E,$90,$00,$1E,$40
 byte $00,$1E,$40,$00,$7A,$40,$00,$7A
 byte $40,$00,$7A,$40,$00,$79,$00,$00
 byte $55,$00,$00,$79,$40,$00,$7A,$50
 byte $00,$16,$90,$00,$01,$40,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",51,52,true       ; Player (gun to the right)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$15,$40,$00,$15,$40
 byte $00,$0F,$50,$00,$07,$50,$00,$0F
 byte $50,$00,$0F,$D0,$00,$8F,$50,$56
 byte $01,$A4,$5B,$5A,$5D,$07,$A5,$B5
 byte $02,$65,$AD,$02,$19,$BD,$00,$05
 byte $65,$00,$02,$7D,$00,$02,$74,$00
 byte $00,$01,$B6,$00,$01,$75,$00,$01
 byte $F5,$00,$01,$F4,$00,$01,$54,$00
 byte $06,$BD,$00,$06,$BD,$00,$06,$AD
 byte $00,$06,$AD,$00,$06,$B4,$00,$01
 byte $B4,$00,$01,$B4,$00,$01,$AD,$00
 byte $01,$AD,$00,$01,$AD,$00,$00,$6D
 byte $00,$00,$55,$00,$01,$6D,$00,$05
 byte $AD,$00,$06,$94,$00,$01,$40,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",53,54,true       ; Player (gun to the left)
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$03,$AA,$C0,$03,$AA,$C0
 byte $03,$96,$C0,$03,$96,$C0,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",55,55,true       ; Enemy bullet
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",56,66,true       ; Unused
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $05,$40,$00,$05,$50,$00,$0D,$50
 byte $00,$07,$50,$00,$0F,$50,$00,$05
 byte $50,$00,$0D,$50,$00,$05,$F0,$A4
 byte $05,$C0,$A4,$03,$90,$07,$01,$D4
 byte $0E,$67,$64,$05,$57,$69,$0D,$AD
 byte $65,$01,$55,$F9,$00,$06,$E9,$00
 byte $00,$0E,$FC,$00,$0E,$EC,$00,$0A
 byte $E4,$00,$0D,$E4,$00,$01,$E4,$00
 byte $0D,$54,$00,$0E,$95,$00,$0F,$A5
 byte $00,$0E,$D9,$00,$0F,$A5,$00,$0E
 byte $94,$00,$03,$A4,$00,$03,$E4,$00
 byte $03,$A9,$00,$03,$E5,$00,$03,$A9
 byte $00,$00,$E5,$00,$00,$54,$00,$03
 byte $F4,$00,$0F,$D4,$00,$05,$40,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",67,68,true       ; Enemy shooting left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$01,$50,$00
 byte $01,$54,$00,$03,$54,$00,$01,$D4
 byte $00,$03,$D4,$00,$01,$74,$00,$03
 byte $54,$00,$01,$69,$00,$00,$7A,$40
 byte $00,$E9,$40,$00,$FA,$50,$03,$B9
 byte $90,$03,$BE,$50,$03,$BA,$90,$00
 byte $02,$7E,$00,$02,$7A,$00,$01,$55
 byte $00,$03,$79,$00,$00,$79,$00,$03
 byte $55,$00,$03,$A5,$40,$03,$E9,$40
 byte $03,$B6,$40,$03,$E9,$40,$03,$A5
 byte $00,$00,$E9,$00,$00,$F9,$00,$00
 byte $EA,$40,$00,$F9,$40,$00,$EA,$40
 byte $00,$39,$40,$00,$15,$00,$00,$FD
 byte $00,$03,$F5,$00,$01,$50,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$05,$40,$00
 byte $05,$50,$00,$0D,$50,$00,$07,$50
 byte $00,$0F,$50,$00,$05,$D4,$00,$0D
 byte $55,$00,$05,$A9,$40,$05,$E6,$40
 byte $00,$E9,$50,$00,$BA,$50,$00,$EE
 byte $90,$00,$EF,$64,$00,$EE,$94,$00
 byte $FB,$E4,$00,$EB,$94,$1F,$BB,$D0
 byte $85,$1D,$59,$79,$19,$96,$79,$04
 byte $E9,$54,$03,$B9,$40,$03,$E6,$40
 byte $03,$A9,$00,$03,$E5,$00,$03,$99
 byte $00,$0F,$A6,$40,$0E,$96,$40,$0E
 byte $59,$90,$0B,$9A,$50,$0D,$4E,$94
 byte $1E,$43,$64,$15,$43,$D5,$F5,$00
 byte $D4,$3F,$40,$39,$0F,$00,$3D,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$01,$50,$00
 byte $01,$54,$00,$03,$54,$00,$01,$D4
 byte $00,$03,$D4,$00,$01,$74,$00,$03
 byte $55,$00,$01,$59,$40,$01,$66,$40
 byte $00,$E9,$40,$00,$E6,$40,$03,$99
 byte $00,$03,$A6,$40,$0E,$56,$40,$00
 byte $99,$40,$3A,$7E,$40,$19,$39,$50
 byte $85,$1F,$79,$74,$1D,$55,$30,$05
 byte $E9,$00,$00,$FA,$40,$00,$E9,$40
 byte $00,$FA,$40,$03,$E9,$40,$03,$FA
 byte $40,$03,$ED,$40,$0F,$7A,$40,$0E
 byte $7E,$40,$0D,$BA,$40,$3E,$4F,$90
 byte $39,$4E,$90,$05,$03,$D0,$F5,$03
 byte $54,$7D,$00,$74,$1D,$01,$F4,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",69,74,true       ; Enemy running left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $05,$40,$00,$15,$40,$00,$15,$C0
 byte $00,$17,$40,$00,$17,$C0,$00,$15
 byte $40,$00,$15,$C0,$00,$3D,$40,$00
 byte $0D,$40,$00,$1B,$00,$00,$5D,$00
 byte $00,$6B,$00,$01,$AF,$00,$01,$6E
 byte $C0,$01,$BE,$C0,$01,$AE,$C0,$00
 byte $00,$FE,$C0,$00,$EE,$C0,$00,$6E
 byte $80,$00,$6D,$C0,$00,$6D,$00,$00
 byte $55,$C0,$01,$5A,$C0,$01,$6B,$C0
 byte $01,$9E,$C0,$01,$6B,$C0,$00,$5A
 byte $C0,$00,$6B,$00,$00,$6F,$00,$01
 byte $AB,$00,$01,$6F,$00,$01,$AB,$00
 byte $01,$6C,$00,$00,$54,$00,$00,$7F
 byte $00,$00,$5F,$C0,$00,$05,$40,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$01,$50
 byte $00,$05,$50,$00,$05,$70,$00,$05
 byte $D0,$00,$05,$F0,$00,$17,$50,$00
 byte $55,$70,$01,$6A,$50,$01,$9B,$50
 byte $05,$6B,$00,$05,$AE,$00,$06,$BB
 byte $00,$19,$FB,$00,$16,$BB,$00,$00
 byte $BC,$00,$5B,$AC,$00,$1F,$BB,$D0
 byte $85,$6D,$65,$74,$6D,$96,$64,$15
 byte $6B,$10,$01,$6E,$C0,$01,$9B,$C0
 byte $00,$6A,$C0,$00,$5B,$C0,$00,$66
 byte $C0,$01,$9A,$F0,$01,$96,$B0,$06
 byte $65,$B0,$05,$A6,$E0,$16,$B1,$70
 byte $19,$C1,$B4,$57,$C1,$54,$17,$00
 byte $5F,$6C,$01,$FC,$7C,$00,$F0,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$05,$40
 byte $00,$15,$40,$00,$15,$C0,$00,$17
 byte $40,$00,$17,$C0,$00,$1D,$40,$00
 byte $55,$C0,$01,$65,$40,$01,$99,$40
 byte $01,$6B,$00,$01,$9B,$00,$00,$66
 byte $C0,$01,$9A,$C0,$01,$95,$B0,$00
 byte $66,$6C,$01,$BD,$AC,$05,$6C,$64
 byte $85,$1D,$6D,$F4,$0C,$55,$74,$00
 byte $6B,$50,$01,$AF,$00,$01,$6B,$00
 byte $01,$AF,$00,$01,$6B,$C0,$01,$AF
 byte $C0,$01,$7B,$C0,$01,$AD,$F0,$01
 byte $BD,$B0,$01,$AE,$70,$06,$F1,$BC
 byte $06,$B1,$6C,$07,$C0,$50,$15,$C0
 byte $5F,$1D,$00,$7D,$1F,$40,$74,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",75,80,true       ; Enemy running right
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$01
 byte $50,$00,$05,$50,$00,$05,$70,$00
 byte $05,$D0,$00,$05,$F0,$00,$05,$50
 byte $00,$05,$70,$00,$0F,$50,$00,$03
 byte $50,$1A,$06,$C0,$1A,$17,$40,$D0
 byte $19,$D9,$B0,$69,$D5,$50,$59,$7A
 byte $70,$6F,$55,$40,$6B,$90,$00,$00
 byte $3F,$B0,$00,$3B,$B0,$00,$1B,$A0
 byte $00,$1B,$70,$00,$1B,$40,$00,$15
 byte $70,$00,$56,$B0,$00,$5A,$F0,$00
 byte $67,$B0,$00,$5A,$F0,$00,$16,$B0
 byte $00,$1A,$C0,$00,$1B,$C0,$00,$6A
 byte $C0,$00,$5B,$C0,$00,$6A,$C0,$00
 byte $5B,$00,$00,$15,$00,$00,$1F,$C0
 byte $00,$17,$F0,$00,$01,$50,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",81,82,true       ; Enemy shooting right
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$3C,$05,$40,$3C,$05,$50,$14
 byte $0D,$50,$14,$07,$50,$18,$0F,$50
 byte $25,$05,$D0,$19,$4D,$54,$06,$55
 byte $65,$05,$95,$99,$01,$5B,$A5,$00
 byte $6F,$99,$00,$3E,$64,$00,$1E,$99
 byte $00,$39,$5B,$00,$05,$FF,$00,$17
 byte $FD,$00,$1F,$F5,$00,$55,$55,$00
 byte $00,$15,$55,$01,$6F,$DD,$06,$BF
 byte $FD,$1A,$F7,$FD,$1B,$F7,$7D,$1B
 byte $D5,$FD,$1B,$4D,$F4,$1B,$36,$E4
 byte $06,$5B,$90,$05,$6E,$40,$05,$BD
 byte $00,$16,$F4,$00,$16,$E4,$00,$01
 byte $90,$00,$05,$40,$00,$15,$40,$00
 byte $55,$00,$00,$14,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",83,84,true       ; Dead sprite to left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$01
 byte $50,$00,$05,$50,$00,$05,$70,$00
 byte $05,$D0,$00,$05,$F0,$00,$05,$50
 byte $00,$05,$70,$0F,$0F,$50,$17,$03
 byte $50,$1D,$06,$C0,$17,$17,$40,$64
 byte $1A,$D9,$94,$6B,$D5,$50,$5B,$BA
 byte $40,$6F,$B5,$40,$6B,$B0,$00,$00
 byte $3F,$B0,$00,$3B,$B0,$00,$1B,$A0
 byte $00,$1B,$70,$00,$1B,$40,$00,$15
 byte $70,$00,$56,$B0,$00,$5A,$F0,$00
 byte $67,$B0,$00,$5A,$F0,$00,$16,$B0
 byte $00,$1A,$C0,$00,$1B,$C0,$00,$6A
 byte $C0,$00,$5B,$C0,$00,$6A,$C0,$00
 byte $5B,$00,$00,$15,$00,$00,$1F,$C0
 byte $00,$17,$F0,$00,$01,$50,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$01
 byte $50,$00,$05,$50,$00,$05,$70,$00
 byte $05,$D0,$00,$05,$F0,$00,$05,$50
 byte $00,$05,$70,$00,$0F,$50,$00,$03
 byte $50,$00,$06,$C0,$00,$17,$40,$00
 byte $1A,$D9,$97,$6B,$D5,$57,$5B,$BA
 byte $57,$6F,$B5,$40,$6B,$B0,$00,$00
 byte $3F,$B0,$00,$3B,$B0,$00,$1B,$A0
 byte $00,$1B,$70,$00,$1B,$40,$00,$15
 byte $70,$00,$56,$B0,$00,$5A,$F0,$00
 byte $67,$B0,$00,$5A,$F0,$00,$16,$B0
 byte $00,$1A,$C0,$00,$1B,$C0,$00,$6A
 byte $C0,$00,$5B,$C0,$00,$6A,$C0,$00
 byte $5B,$00,$00,$15,$00,$00,$1F,$C0
 byte $00,$17,$F0,$00,$01,$50,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",85,88,true       ; Enemy attack to right
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $05,$40,$00,$05,$50,$00,$0D,$50
 byte $00,$07,$50,$00,$0F,$50,$00,$05
 byte $50,$F0,$0D,$50,$D4,$05,$F0,$74
 byte $05,$C0,$D4,$03,$90,$19,$01,$D4
 byte $16,$67,$A4,$05,$57,$E9,$01,$AE
 byte $E5,$01,$5E,$F9,$00,$0E,$E9,$00
 byte $00,$0E,$FC,$00,$0E,$EC,$00,$0A
 byte $E4,$00,$0D,$E4,$00,$01,$E4,$00
 byte $0D,$54,$00,$0E,$95,$00,$0F,$A5
 byte $00,$0E,$D9,$00,$0F,$A5,$00,$0E
 byte $94,$00,$03,$A4,$00,$03,$E4,$00
 byte $03,$A9,$00,$03,$E5,$00,$03,$A9
 byte $00,$00,$E5,$00,$00,$54,$00,$03
 byte $F4,$00,$0F,$D4,$00,$05,$40,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $05,$40,$00,$05,$50,$00,$0D,$50
 byte $00,$07,$50,$00,$0F,$50,$00,$05
 byte $50,$00,$0D,$50,$00,$05,$F0,$00
 byte $05,$C0,$00,$03,$90,$00,$01,$D4
 byte $D6,$67,$A4,$D5,$57,$E9,$D5,$AE
 byte $E5,$01,$5E,$F9,$00,$0E,$E9,$00
 byte $00,$0E,$FC,$00,$0E,$EC,$00,$0A
 byte $E4,$00,$0D,$E4,$00,$01,$E4,$00
 byte $0D,$54,$00,$0E,$95,$00,$0F,$A5
 byte $00,$0E,$D9,$00,$0F,$A5,$00,$0E
 byte $94,$00,$03,$A4,$00,$03,$E4,$00
 byte $03,$A9,$00,$03,$E5,$00,$03,$A9
 byte $00,$00,$E5,$00,$00,$54,$00,$03
 byte $F4,$00,$0F,$D4,$00,$05,$40,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",89,92,true       ; Enemy attack to left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",93,94,true       ; Unused
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$05,$40,$00,$05,$50,$00
 byte $0D,$50,$00,$07,$50,$20,$0F,$50
 byte $10,$05,$D0,$34,$0D,$54,$19,$05
 byte $64,$26,$55,$98,$05,$5B,$A4,$05
 byte $5F,$98,$01,$7E,$64,$00,$DE,$98
 byte $00,$79,$58,$00,$05,$FC,$00,$17
 byte $F0,$00,$1F,$F0,$00,$55,$50,$00
 byte $00,$55,$54,$05,$BF,$74,$1A,$FF
 byte $F4,$6B,$DF,$F4,$6F,$DD,$F4,$6F
 byte $57,$F4,$6D,$37,$D0,$6C,$DB,$90
 byte $19,$6E,$40,$15,$B9,$00,$16,$F4
 byte $00,$5B,$D0,$00,$5B,$90,$00,$06
 byte $40,$00,$15,$00,$00,$55,$00,$00
 byte $54,$00,$00,$50,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",95,96,true       ; Dead sprite to left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$3C,$05,$40,$3C,$05,$50,$14
 byte $0D,$50,$14,$07,$50,$18,$0F,$50
 byte $25,$05,$D0,$19,$4D,$54,$06,$55
 byte $65,$05,$95,$99,$01,$5B,$A5,$00
 byte $6F,$99,$00,$3E,$64,$00,$1E,$99
 byte $00,$39,$5B,$00,$05,$FF,$00,$17
 byte $FD,$00,$1F,$F5,$00,$55,$55,$00
 byte $00,$15,$55,$01,$6F,$DD,$06,$BF
 byte $FD,$1A,$F7,$FD,$1B,$F7,$7D,$1B
 byte $D5,$FD,$1B,$4D,$F4,$1B,$36,$E4
 byte $06,$5B,$90,$05,$6E,$40,$05,$BD
 byte $00,$16,$F4,$00,$16,$E4,$00,$01
 byte $90,$00,$05,$40,$00,$15,$40,$00
 byte $55,$00,$00,$14,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",97,98,true       ; Dead sprite to left
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $54,$00,$01,$55,$00,$01,$55,$00
 byte $01,$55,$00,$01,$DD,$00,$00,$74
 byte $00,$01,$FD,$00,$05,$55,$C0,$16
 byte $76,$F0,$1A,$56,$B0,$66,$56,$EC
 byte $5A,$6A,$BC,$6A,$6A,$AC,$AA,$99
 byte $BB,$69,$9A,$6F,$A6,$9A,$6B,$00
 byte $A6,$6F,$A5,$A5,$6B,$5F,$67,$DF
 byte $88,$5F,$67,$C4,$01,$55,$00,$06
 byte $AA,$C0,$1A,$AA,$B0,$16,$AA,$F0
 byte $1A,$66,$B0,$16,$9A,$F0,$15,$9A
 byte $B0,$06,$9A,$C0,$05,$9B,$C0,$06
 byte $9A,$C0,$05,$9B,$C0,$06,$9A,$C0
 byte $05,$9B,$C0,$01,$45,$00,$07,$DF
 byte $40,$1F,$47,$D0,$1D,$01,$D0,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $54,$00,$01,$55,$00,$01,$55,$00
 byte $01,$55,$00,$01,$DD,$00,$00,$74
 byte $00,$05,$FD,$00,$15,$55,$C0,$59
 byte $75,$B0,$5A,$56,$F0,$66,$56,$BC
 byte $9A,$6A,$AC,$AA,$6A,$BC,$A6,$99
 byte $AF,$96,$9A,$6B,$A5,$9A,$6F,$00
 byte $66,$6B,$5F,$66,$5F,$05,$A5,$F4
 byte $85,$02,$A9,$F4,$01,$55,$00,$06
 byte $AA,$C0,$19,$AA,$B0,$16,$99,$F0
 byte $1A,$B7,$B0,$16,$F6,$C0,$16,$B7
 byte $C0,$19,$F6,$C0,$06,$B7,$C0,$05
 byte $F5,$00,$06,$B7,$40,$05,$D7,$D0
 byte $06,$91,$D0,$01,$41,$40,$07,$D0
 byte $00,$1F,$50,$00,$1D,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $54,$00,$01,$55,$00,$01,$55,$00
 byte $01,$55,$00,$01,$DD,$00,$00,$74
 byte $00,$01,$FD,$C0,$05,$55,$B0,$15
 byte $75,$EC,$1A,$56,$BC,$66,$56,$AC
 byte $5A,$6A,$BC,$6A,$6A,$AF,$9A,$9A
 byte $6B,$69,$9A,$6F,$A5,$99,$6B,$00
 byte $F5,$E9,$99,$50,$F5,$99,$52,$1F
 byte $5A,$1F,$6A,$80,$00,$55,$40,$03
 byte $AA,$90,$0E,$AA,$64,$0F,$66,$94
 byte $0E,$DE,$A4,$03,$9F,$94,$03,$DE
 byte $94,$03,$9F,$64,$03,$DE,$90,$00
 byte $5F,$50,$01,$DE,$90,$07,$D7,$50
 byte $07,$46,$90,$01,$41,$40,$00,$07
 byte $D0,$00,$05,$F4,$00,$00,$74,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",99,104,true      ; Enemy front walking
IGNOREBLOCKSTART##
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$54,$00,$01,$6F,$00,$05
 byte $FA,$C0,$07,$AB,$C0,$06,$6A,$C0
 byte $05,$AB,$C0,$01,$5F,$00,$01,$A9
 byte $00,$01,$FD,$00,$05,$AB,$C0,$15
 byte $AE,$F0,$1A,$6A,$B0,$66,$6A,$AC
 byte $5A,$6A,$BC,$6A,$9D,$6C,$5A,$9D
 byte $AB,$69,$9B,$6F,$A6,$9E,$5B,$00
 byte $A7,$6F,$A6,$A7,$DB,$55,$A7,$D5
 byte $85,$E5,$A5,$6D,$E5,$55,$6D,$55
 byte $AB,$54,$16,$AA,$F0,$19,$AA,$B0
 byte $16,$DA,$F0,$1B,$D6,$B0,$16,$DA
 byte $F0,$1B,$D6,$B0,$06,$DA,$C0,$07
 byte $D7,$C0,$06,$DA,$C0,$07,$D7,$C0
 byte $06,$DA,$C0,$01,$45,$00,$07,$DF
 byte $40,$07,$DF,$40,$06,$9A,$40,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$54,$00,$01,$6F,$00,$05
 byte $FA,$C0,$07,$AB,$C0,$06,$6A,$C0
 byte $05,$AB,$C0,$05,$5F,$00,$01,$A9
 byte $00,$01,$FD,$00,$06,$6B,$C0,$1A
 byte $6A,$F0,$16,$6A,$B0,$5A,$6A,$AC
 byte $66,$6A,$BC,$5A,$9E,$6C,$6A,$9B
 byte $9B,$9A,$9B,$DB,$65,$9B,$5B,$00
 byte $66,$6B,$F5,$A7,$5B,$F6,$6A,$5C
 byte $85,$55,$A9,$7D,$01,$55,$7D,$06
 byte $AA,$94,$1A,$AA,$F0,$16,$A6,$B0
 byte $1A,$BA,$F0,$16,$F6,$B0,$19,$B6
 byte $F0,$06,$F6,$B0,$05,$B6,$40,$06
 byte $F5,$D0,$05,$B3,$D0,$06,$F3,$40
 byte $05,$B5,$00,$05,$50,$00,$07,$D0
 byte $00,$07,$D0,$00,$01,$40,$00,$00
 byte $00,$00,$00,$00,$00,$00,$00,$00
 byte $00,$00,$54,$00,$01,$6F,$00,$05
 byte $FA,$C0,$07,$AB,$C0,$06,$6A,$C0
 byte $05,$AB,$C0,$01,$5F,$00,$01,$A9
 byte $00,$01,$FD,$00,$05,$6B,$C0,$16
 byte $6A,$F0,$19,$6A,$B0,$66,$6A,$EC
 byte $5A,$69,$7C,$6A,$9D,$AC,$9A,$9B
 byte $5B,$69,$9F,$6F,$A6,$5B,$5B,$00
 byte $A7,$55,$65,$67,$7D,$55,$A7,$7D
 byte $85,$F5,$A5,$55,$F5,$55,$00,$56
 byte $AA,$C0,$1A,$AB,$B0,$16,$EA,$F0
 byte $1B,$9A,$B0,$16,$D6,$F0,$17,$DA
 byte $B0,$16,$D6,$F0,$1D,$DB,$C0,$1F
 byte $56,$C0,$1F,$5B,$C0,$07,$5A,$C0
 byte $01,$1B,$C0,$00,$15,$00,$00,$1F
 byte $40,$00,$1F,$40,$00,$05,$00,$00

IGNOREBLOCKEND##
incbin "yoursprite.spt",105,110,true     ; Enemy back walking

;===============================================================================
;  LEVEL DATA
;===============================================================================

$8000
MAP_MEM
;incbin"Maps2025/GameProjectHomeDay3fbk - Map (22x21).bin"
;incbin"Maps2025/GameProjectHomeDay3fTextMulticolor - Map (22x21).bin"

;incbin"Maps2025/Hotel3l - Map (16x10).bin"
        byte $00,$2E,$15,$29,$00,$2E,$29,$00,$2E,$00,$29,$00,$2E,$29,$15,$29
        byte $26,$25,$19,$29,$25,$26,$25,$25,$26,$25,$29,$25,$26,$29,$15,$29
        byte $28,$2B,$18,$29,$00,$00,$00,$28,$2B,$27,$29,$28,$2B,$29,$15,$29
        byte $08,$08,$1A,$08,$08,$2F,$04,$08,$08,$08,$08,$08,$08,$08,$1A,$08
        byte $2D,$2D,$17,$2D,$0B,$01,$2D,$1E,$1D,$1F,$2D,$2D,$2D,$2D,$17,$2D
        byte $24,$24,$16,$0C,$03,$06,$24,$1C,$1B,$20,$23,$12,$13,$23,$16,$23
        byte $22,$22,$0D,$02,$07,$0E,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22
        byte $14,$14,$05,$14,$14,$0F,$0F,$2A,$10,$11,$2A,$0F,$14,$14,$14,$14
        byte $21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21
        byte $21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21,$21


; Hotel Map Colors
ATTRIBUTE_MEM
;incbin"Maps2025/GameProjectHomeDay3fbk - CharAttribs_L1.bin"
;incbin"Maps2025/GameProjectHomeDay3fTextMulticolor - CharAttribs_L1.bin"

;incbin"Maps2025/Hotel3l - CharAttribs_L1.bin"
        byte $03,$0A,$0A,$0A,$0A,$3E,$0A,$0A,$0A,$0A,$0A,$0A,$0E,$0E,$0E,$0E
        byte $0E,$0E,$0E,$0E,$1E,$0A,$0A,$0A,$1E,$0B,$0A,$0A,$0A,$0A,$0A,$0A
        byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0E,$0E,$0E,$0E,$0C
        byte $0C,$0C,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$18,$0C,$0C,$08,$0C,$0C,$0C
        byte $0B,$0E,$0E,$0E,$0C,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0A,$0A
        byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0E,$0E,$0E,$0E,$0E
        byte $0E,$0E,$0E,$0E,$0E,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A
        byte $0A,$0A,$0A,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0A,$0A,$0A,$0D,$0D
        byte $0D,$0D,$0D,$0A,$0A,$8C,$8C,$8C,$8C,$8C,$8C,$8C,$8C,$0A,$8C,$8C
        byte $8C,$8C,$8C,$0A,$0E,$09,$0E,$09,$0E,$09,$0E,$0A,$09,$0E,$09,$0E
        byte $0E,$0C,$0C,$0C,$0E,$0E,$0E,$0A,$0E,$0E,$0A,$0A,$0A,$0A,$0A,$0E
        byte $0E,$0A,$0A,$0A,$0A,$0A,$0B,$0A,$0A,$0B,$0A,$0A,$0A,$0A,$0F,$0F
        byte $0E,$0A,$0A,$0A,$0A,$0D,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$1E,$0E,$0E
        byte $0C,$0C,$0C,$0C,$0B,$0B,$0C,$0A,$0D,$0A,$0A,$0E,$0E,$0E,$0A,$0A
        byte $0A,$0E,$0E,$0C,$0C,$0A,$0E,$0E,$0E,$0E,$0C,$0C,$0A,$0A,$0A,$0A
        byte $0A,$0A,$0A,$0A,$0E,$0C,$0B,$0B,$0B
;incbin"Maps2025/GameProjectHomeDay3fbk - Tiles.bin"
;incbin"Maps2025/GameProjectHomeDay3fTextMulticolor - Tiles.bin"

;incbin"Maps2025/Hotel3l - Tiles.bin"

TILE_MEM
        byte $00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        byte $02,$03,$04,$05,$06,$06,$05,$07,$06,$05,$08,$09,$05,$0A,$06,$0B
        byte $0C,$0D,$0E,$05,$0C,$0F,$05,$10,$0E,$05,$11,$12,$05,$13,$12,$14
        byte $06,$15,$06,$05,$06,$16,$05,$17,$0E,$05,$11,$12,$05,$13,$12,$18
        byte $19,$19,$19,$05,$01,$01,$05,$1A,$01,$05,$1B,$01,$05,$1C,$1D,$1D
        byte $1E,$1F,$06,$05,$20,$21,$05,$22,$23,$05,$24,$25,$05,$1C,$26,$27
        byte $28,$06,$06,$29,$2A,$06,$06,$29,$18,$18,$18,$2B,$18,$18,$18,$2B
        byte $2C,$2D,$18,$18,$2E,$18,$18,$18,$14,$14,$14,$14,$14,$14,$14,$14
        byte $2F,$30,$30,$31,$32,$33,$34,$35,$36,$37,$38,$37,$39,$3A,$3B,$3C
        byte $3D,$3E,$3E,$3F,$40,$41,$41,$42,$41,$41,$40,$42,$43,$43,$44,$45
        byte $3D,$3E,$3E,$3F,$40,$46,$47,$48,$49,$4A,$40,$4B,$4C,$43,$44,$4D
        byte $4E,$4F,$50,$51,$06,$52,$53,$54,$55,$16,$06,$54,$56,$15,$06,$54
        byte $06,$06,$57,$58,$06,$59,$06,$5A,$5B,$5C,$18,$5D,$5E,$0D,$18,$5D
        byte $18,$18,$18,$5F,$18,$18,$60,$61,$14,$62,$63,$18,$14,$5F,$64,$18
        byte $18,$18,$18,$2B,$18,$18,$18,$2B,$14,$14,$14,$2B,$14,$14,$14,$2B
        byte $65,$65,$65,$66,$67,$67,$67,$68,$69,$6A,$25,$6B,$6C,$6D,$6E,$6F
        byte $65,$70,$71,$71,$72,$73,$74,$75,$76,$77,$78,$78,$79,$7A,$7A,$7A
        byte $7B,$7B,$7C,$7D,$7E,$74,$7F,$72,$78,$78,$80,$81,$7A,$7A,$7A,$82
        byte $06,$83,$84,$84,$06,$85,$86,$87,$88,$89,$8A,$8A,$8B,$8C,$8C,$8C
        byte $84,$84,$8D,$06,$8E,$86,$8F,$06,$8A,$8A,$90,$91,$8C,$8C,$8C,$92
        byte $93,$65,$65,$65,$67,$67,$67,$67,$6A,$25,$6A,$25,$6D,$6E,$6D,$6E
        byte $94,$95,$96,$97,$98,$99,$9A,$97,$94,$95,$96,$40,$98,$99,$9A,$40
        byte $94,$95,$96,$9B,$98,$99,$9A,$9B,$94,$95,$9C,$40,$9D,$9E,$9F,$A0
        byte $94,$95,$96,$9B,$98,$99,$9A,$9B,$94,$95,$96,$9B,$98,$99,$9A,$9B
        byte $94,$95,$96,$A1,$98,$99,$9A,$A1,$94,$95,$96,$A1,$98,$99,$9A,$40
        byte $94,$95,$96,$A2,$98,$99,$9A,$A3,$94,$95,$96,$A2,$98,$99,$9A,$A3
        byte $94,$95,$96,$A4,$98,$99,$9A,$A5,$94,$95,$96,$A6,$98,$99,$9A,$40
        byte $A7,$A8,$A9,$A7,$AA,$AA,$AA,$AA,$AB,$AB,$AC,$AC,$AD,$AD,$AD,$AD
        byte $06,$AE,$AF,$B0,$06,$AA,$AA,$AA,$0C,$B1,$AC,$AC,$0C,$B2,$AD,$AD
        byte $B3,$B3,$B3,$B4,$06,$06,$06,$06,$B5,$B6,$B6,$B7,$B8,$B9,$B9,$BA
        byte $BB,$BC,$BC,$BC,$BD,$BD,$BD,$BD,$BD,$BD,$BE,$BF,$BD,$BD,$AF,$C0
        byte $B3,$B3,$B3,$B4,$06,$06,$06,$06,$C1,$C2,$C3,$06,$C4,$C5,$C6,$06
        byte $AF,$B0,$C7,$06,$AA,$AA,$AA,$C8,$AC,$AC,$C9,$CA,$AD,$AD,$CB,$CC
        byte $18,$18,$18,$18,$14,$14,$14,$14,$14,$14,$14,$14,$CD,$CD,$CD,$CD
        byte $18,$18,$18,$18,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14
        byte $06,$06,$06,$06,$06,$06,$06,$06,$40,$CE,$CF,$18,$CF,$18,$18,$18
        byte $06,$06,$06,$06,$06,$06,$06,$06,$18,$18,$18,$18,$18,$18,$18,$18
        byte $D0,$D1,$D0,$D1,$D2,$D3,$D2,$D3,$D3,$D2,$D3,$D2,$D2,$D3,$D2,$D3
        byte $D0,$D1,$D0,$D1,$D2,$D4,$D5,$D6,$D6,$D2,$D6,$D2,$D6,$D2,$D6,$D2
        byte $A1,$A1,$A1,$A1,$40,$D7,$40,$D8,$D9,$DA,$97,$97,$DB,$DC,$DD,$DD
        byte $A1,$A1,$A1,$A1,$D8,$40,$DE,$40,$97,$97,$DF,$E0,$DD,$DD,$E1,$E2
        byte $A1,$E3,$E4,$A1,$D8,$E3,$E4,$40,$97,$E3,$E4,$97,$D8,$E3,$E4,$A1
        byte $65,$65,$65,$65,$72,$E5,$72,$72,$40,$E6,$E7,$40,$44,$E8,$E9,$44
        byte $A1,$A1,$A1,$A1,$01,$EA,$EB,$40,$EC,$ED,$EE,$EF,$44,$F0,$F1,$44
        byte $06,$06,$06,$F2,$06,$06,$06,$F2,$06,$06,$06,$F2,$06,$06,$06,$F2
        byte $F3,$B4,$4F,$4F,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
        byte $00,$F4,$F5,$00,$40,$F6,$F7,$40,$00,$F8,$F8,$40,$00,$00,$00,$00
        byte $19,$19,$19,$19,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

;*******************************************************************************
;                          BACK ALLEY MAP
;*******************************************************************************

;charset_data
;* = $4800
MAP2_CHAR_MEM 

*=$8000
MAP2_MEM
        byte $25,$00,$02,$02,$02,$02,$02,$20,$00,$25,$00,$00,$24,$00,$00,$25
        byte $00,$00,$00,$01,$1F,$03,$1F,$03,$21,$00,$00,$00,$23,$23,$00,$00
        byte $00,$00,$22,$00,$02,$02,$02,$02,$02,$20,$22,$00,$00,$23,$23,$00
        byte $0A,$25,$08,$0D,$00,$01,$1F,$04,$1F,$03,$21,$0D,$00,$00,$23,$23
        byte $00,$0A,$00,$07,$0E,$06,$06,$06,$05,$06,$06,$06,$0E,$19,$1A,$10
        byte $0F,$0F,$26,$27,$0F,$12,$11,$13,$11,$12,$16,$17,$18,$11,$11,$11
        byte $11,$12,$13,$11,$11,$12,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15
        byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15
        byte $15,$15,$15,$15,$15,$15,$15,$15,$1E,$1B,$1E,$1E,$1E,$1B,$1E,$1E
        byte $1E,$1B,$1E,$1E,$15,$15,$15,$15,$1E,$1D,$1C,$1D,$1C,$1D,$1C,$1D
        byte $1C,$1D,$1C,$1D,$1C,$1D,$1C,$1D,$1C,$1D

;color_data
ATTRIBUTE2_MEM
        byte $03,$0C,$0A,$0A,$0A,$0A,$0A,$0A,$0E,$0E,$0E,$0E,$0A,$0A,$0A,$0A
        byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$09,$0B
        byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0E,$0E
        byte $0E,$0A,$0A,$0A,$0A,$0A,$0A,$0F,$0A,$0A,$0A,$0F,$0A,$0F,$0F,$0A
        byte $0A,$0A,$0A,$0A,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0E,$0E,$0E,$0B
        byte $0E,$0B,$0B,$0B,$0E,$0B,$0B,$0B,$0E,$0B,$0B,$0B,$0E,$0B,$0B,$0B
        byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B
        byte $0B,$0B,$0B,$1A,$1A,$1A,$1A,$1A,$1A,$1F,$1A,$1F,$1A,$1A,$1A,$1E
        byte $1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1A,$1A,$1A,$1A,$1E,$1E,$1E,$1E
        byte $1E,$1A,$1A,$1A,$1E,$1A,$1E,$1E,$1E,$1A,$0E,$0E,$5E,$0E,$0D,$0D
        byte $5E,$5E,$5E,$5E,$5E,$5E,$5E,$5E,$0E,$0C,$0D,$0E,$0E,$0E,$0E,$0E
        byte $0E,$0E,$0E,$0B,$0B,$0A,$0A,$09,$09,$09,$09,$09,$0E,$0E,$0F,$0E
        byte $0E,$0E,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0E,$0A,$0E,$0A
        byte $0A,$0E,$0A,$0A,$0E,$0A,$0E,$0E,$0E,$09,$0E,$0E,$0E,$0E,$0E,$0E
        byte $0E,$0E,$0E,$0E,$0F,$0B,$0B,$09,$0E,$0E,$0E,$0C,$0C,$0A,$09,$09
        byte $0D,$0E,$0E,$0E,$0C,$0C,$0A


;tiles_data
TILE2_MEM
        byte $00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        byte $02,$03,$04,$05,$02,$02,$06,$07,$02,$03,$04,$05,$02,$02,$06,$07
        byte $08,$09,$0A,$0B,$08,$09,$0A,$0B,$0C,$0D,$0E,$0F,$02,$03,$10,$05
        byte $02,$03,$10,$05,$02,$02,$10,$05,$02,$03,$10,$05,$02,$03,$10,$05
        byte $11,$12,$13,$14,$15,$16,$17,$18,$19,$1A,$1B,$18,$15,$1C,$1D,$18
        byte $1E,$1F,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$2A,$2B,$2C,$2D
        byte $2E,$2F,$2F,$30,$31,$32,$32,$33,$31,$32,$32,$33,$34,$35,$35,$36
        byte $37,$38,$38,$39,$3A,$3B,$3B,$3C,$3A,$3B,$3D,$3C,$3A,$3E,$3F,$3C
        byte $37,$40,$41,$39,$3A,$42,$43,$3C,$3A,$3B,$3D,$3C,$3A,$3E,$3F,$3C
        byte $44,$45,$46,$47,$44,$45,$46,$47,$44,$45,$46,$47,$44,$45,$46,$47
        byte $48,$49,$49,$4A,$49,$4B,$49,$4A,$49,$49,$48,$4A,$49,$49,$49,$4A
        byte $44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44,$44
        byte $44,$4C,$44,$44,$44,$4C,$44,$44,$44,$4C,$44,$44,$4D,$4E,$44,$44
        byte $44,$4C,$44,$44,$44,$4C,$44,$44,$44,$4C,$44,$44,$44,$4C,$44,$44
        byte $4F,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$5A,$5B,$5C,$5D,$5E
        byte $5F,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$6A,$6B,$6C,$5D,$6D
        byte $4F,$6E,$51,$6F,$53,$70,$55,$71,$57,$72,$59,$5A,$5B,$6C,$5D,$5E
        byte $73,$73,$73,$73,$74,$74,$74,$74,$74,$74,$74,$74,$75,$76,$76,$77
        byte $73,$73,$73,$73,$74,$74,$74,$74,$74,$74,$74,$74,$78,$78,$78,$78
        byte $73,$73,$73,$73,$74,$74,$74,$74,$74,$79,$74,$74,$7A,$7B,$7A,$7A
        byte $73,$73,$73,$73,$74,$74,$74,$74,$74,$74,$74,$74,$74,$74,$74,$74
        byte $7C,$04,$7C,$04,$7D,$7C,$04,$7C,$7C,$04,$7C,$04,$04,$7C,$04,$7C
        byte $73,$73,$7E,$7F,$74,$80,$81,$82,$83,$84,$85,$86,$87,$88,$89,$8A
        byte $7F,$7F,$7F,$7F,$8B,$8C,$8B,$8C,$86,$86,$8D,$8E,$8F,$90,$91,$92
        byte $7F,$93,$94,$94,$82,$95,$74,$74,$96,$97,$74,$74,$8F,$90,$39,$98
        byte $99,$9A,$9A,$9A,$9B,$9C,$9D,$9E,$9F,$A0,$A1,$A2,$A3,$A4,$A5,$A6
        byte $9A,$9A,$9A,$A7,$A8,$A9,$AA,$AB,$AC,$AD,$AE,$AB,$AF,$AF,$B0,$B1
        byte $B2,$B2,$B2,$B2,$B3,$B4,$B5,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3
        byte $B6,$B6,$B6,$B6,$B7,$B7,$B7,$B7,$B7,$B7,$B7,$B7,$B7,$B7,$B7,$B7
        byte $B6,$B6,$B6,$B8,$B7,$B7,$B9,$BA,$B7,$B9,$BA,$B7,$B9,$BA,$B7,$B7
        byte $B2,$B2,$B2,$B2,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3,$B3
        byte $02,$03,$04,$05,$02,$BB,$BC,$07,$02,$BD,$BE,$05,$02,$BF,$C0,$07
        byte $02,$C1,$C2,$C3,$C4,$C5,$C6,$C7,$C8,$C9,$CA,$CB,$02,$CC,$C2,$C3
        byte $02,$CD,$CE,$CF,$02,$D0,$D1,$D2,$02,$D0,$CE,$C3,$02,$D3,$D1,$D4
        byte $00,$D5,$D6,$D7,$44,$4C,$00,$D8,$44,$4C,$00,$00,$00,$4C,$00,$00
        byte $D9,$DA,$D9,$DB,$DC,$DD,$DC,$DE,$D9,$DA,$D9,$DF,$DC,$DD,$DC,$E0
        byte $00,$00,$00,$00,$00,$44,$44,$00,$00,$44,$44,$00,$00,$E1,$E2,$44
        byte $00,$00,$00,$00,$00,$E3,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        byte $E4,$60,$61,$62,$E5,$64,$55,$E6,$57,$E7,$E8,$E9,$5B,$88,$EA,$EB
        byte $EC,$60,$61,$62,$ED,$EE,$EF,$71,$F0,$E9,$F1,$F2,$F3,$F4,$91,$F5
        byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

debugger byte 1



